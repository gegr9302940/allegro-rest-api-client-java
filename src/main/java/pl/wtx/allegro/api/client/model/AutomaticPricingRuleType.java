/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The rule type.  * &#x60;EXCHANGE_RATE&#x60; - Calculates prices on additional marketplaces using the latest exchange rates and price from the offer base marketplace.                     &lt;br /&gt;Is not available on base marketplace and business marketplaces.                     &lt;br /&gt;&lt;a href&#x3D;\&quot;https://help.allegro.com/pl/sell/a/jak-dzialaja-reguly-cenowe-typu-przelicznik-cen-LR8WwMKyBf9\&quot; target&#x3D;\&quot;_blank\&quot;&gt;More information about EXCHANGE_RATE type&lt;/a&gt;.  * &#x60;FOLLOW_BY_ALLEGRO_MIN_PRICE&#x60; - Calculates prices by following the lowest product price on Allegro for a given marketplace.                     &lt;br /&gt;Is not available on business marketplaces.                     &lt;br /&gt;&lt;a href&#x3D;\&quot;https://help.allegro.com/pl/sell/a/jak-dzialaja-reguly-cenowe-typu-najnizsza-cena-na-allegro-i-top-oferta-8drjrabe3hE\&quot;  target&#x3D;\&quot;_blank\&quot;&gt;More information about FOLLOW_BY_ALLEGRO_MIN_PRICE type&lt;/a&gt;. * &#x60;FOLLOW_BY_MARKET_MIN_PRICE&#x60; - Calculates prices by following the lowest product price on market for a given marketplace.                     &lt;br /&gt;Is not available on business marketplaces.                     &lt;br /&gt;&lt;a href&#x3D;\&quot;https://help.allegro.com/pl/sell/a/jak-dzialaja-reguly-cenowe-typu-najnizsza-cena-na-allegro-i-top-oferta-8drjrabe3hE\&quot; target&#x3D;\&quot;_blank\&quot;&gt;More information about FOLLOW_BY_MARKET_MIN_PRICE type&lt;/a&gt;. * &#x60;FOLLOW_BY_TOP_OFFER_PRICE&#x60; - Calculates prices by following the top offer price on market for a given marketplace.                     &lt;br /&gt;Is not available on business marketplaces.                     &lt;br /&gt;&lt;a href&#x3D;\&quot;https://help.allegro.com/pl/sell/a/jak-dzialaja-reguly-cenowe-typu-najnizsza-cena-na-allegro-i-top-oferta-8drjrabe3hE\&quot; target&#x3D;\&quot;_blank\&quot;&gt;More information about FOLLOW_BY_TOP_OFFER_PRICE type&lt;/a&gt;. 
 */
@JsonAdapter(AutomaticPricingRuleType.Adapter.class)
public enum AutomaticPricingRuleType {
  
  EXCHANGE_RATE("EXCHANGE_RATE"),
  
  FOLLOW_BY_ALLEGRO_MIN_PRICE("FOLLOW_BY_ALLEGRO_MIN_PRICE"),
  
  FOLLOW_BY_MARKET_MIN_PRICE("FOLLOW_BY_MARKET_MIN_PRICE"),
  
  FOLLOW_BY_TOP_OFFER_PRICE("FOLLOW_BY_TOP_OFFER_PRICE");

  private String value;

  AutomaticPricingRuleType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AutomaticPricingRuleType fromValue(String value) {
    for (AutomaticPricingRuleType b : AutomaticPricingRuleType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AutomaticPricingRuleType> {
    @Override
    public void write(final JsonWriter jsonWriter, final AutomaticPricingRuleType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AutomaticPricingRuleType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AutomaticPricingRuleType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AutomaticPricingRuleType.fromValue(value);
  }
}

