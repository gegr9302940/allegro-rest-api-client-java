/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1PublicationMarketplaces;
import pl.wtx.allegro.api.client.model.OfferStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * Information on the offer&#39;s publication status and dates.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class OfferListingDtoV1Publication {
  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private OfferStatus status;

  public static final String SERIALIZED_NAME_STARTING_AT = "startingAt";
  @SerializedName(SERIALIZED_NAME_STARTING_AT)
  @javax.annotation.Nullable
  private String startingAt;

  public static final String SERIALIZED_NAME_STARTED_AT = "startedAt";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  @javax.annotation.Nullable
  private String startedAt;

  public static final String SERIALIZED_NAME_ENDING_AT = "endingAt";
  @SerializedName(SERIALIZED_NAME_ENDING_AT)
  @javax.annotation.Nullable
  private String endingAt;

  public static final String SERIALIZED_NAME_ENDED_AT = "endedAt";
  @SerializedName(SERIALIZED_NAME_ENDED_AT)
  @javax.annotation.Nullable
  private String endedAt;

  public static final String SERIALIZED_NAME_MARKETPLACES = "marketplaces";
  @SerializedName(SERIALIZED_NAME_MARKETPLACES)
  @javax.annotation.Nullable
  private OfferListingDtoV1PublicationMarketplaces marketplaces;

  public OfferListingDtoV1Publication() {
  }

  public OfferListingDtoV1Publication status(@javax.annotation.Nullable OfferStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public OfferStatus getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable OfferStatus status) {
    this.status = status;
  }


  public OfferListingDtoV1Publication startingAt(@javax.annotation.Nullable String startingAt) {
    this.startingAt = startingAt;
    return this;
  }

  /**
   * The date and time of activation in UTC for a planned listing.
   * @return startingAt
   */
  @javax.annotation.Nullable
  public String getStartingAt() {
    return startingAt;
  }

  public void setStartingAt(@javax.annotation.Nullable String startingAt) {
    this.startingAt = startingAt;
  }


  public OfferListingDtoV1Publication startedAt(@javax.annotation.Nullable String startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * The actual date and time of activation in UTC.
   * @return startedAt
   */
  @javax.annotation.Nullable
  public String getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(@javax.annotation.Nullable String startedAt) {
    this.startedAt = startedAt;
  }


  public OfferListingDtoV1Publication endingAt(@javax.annotation.Nullable String endingAt) {
    this.endingAt = endingAt;
    return this;
  }

  /**
   * The date and time of a planned ending in UTC.
   * @return endingAt
   */
  @javax.annotation.Nullable
  public String getEndingAt() {
    return endingAt;
  }

  public void setEndingAt(@javax.annotation.Nullable String endingAt) {
    this.endingAt = endingAt;
  }


  public OfferListingDtoV1Publication endedAt(@javax.annotation.Nullable String endedAt) {
    this.endedAt = endedAt;
    return this;
  }

  /**
   * The actual date and time of last ending in UTC.
   * @return endedAt
   */
  @javax.annotation.Nullable
  public String getEndedAt() {
    return endedAt;
  }

  public void setEndedAt(@javax.annotation.Nullable String endedAt) {
    this.endedAt = endedAt;
  }


  public OfferListingDtoV1Publication marketplaces(@javax.annotation.Nullable OfferListingDtoV1PublicationMarketplaces marketplaces) {
    this.marketplaces = marketplaces;
    return this;
  }

  /**
   * Get marketplaces
   * @return marketplaces
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1PublicationMarketplaces getMarketplaces() {
    return marketplaces;
  }

  public void setMarketplaces(@javax.annotation.Nullable OfferListingDtoV1PublicationMarketplaces marketplaces) {
    this.marketplaces = marketplaces;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferListingDtoV1Publication offerListingDtoV1Publication = (OfferListingDtoV1Publication) o;
    return Objects.equals(this.status, offerListingDtoV1Publication.status) &&
        Objects.equals(this.startingAt, offerListingDtoV1Publication.startingAt) &&
        Objects.equals(this.startedAt, offerListingDtoV1Publication.startedAt) &&
        Objects.equals(this.endingAt, offerListingDtoV1Publication.endingAt) &&
        Objects.equals(this.endedAt, offerListingDtoV1Publication.endedAt) &&
        Objects.equals(this.marketplaces, offerListingDtoV1Publication.marketplaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, startingAt, startedAt, endingAt, endedAt, marketplaces);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferListingDtoV1Publication {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startingAt: ").append(toIndentedString(startingAt)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    endingAt: ").append(toIndentedString(endingAt)).append("\n");
    sb.append("    endedAt: ").append(toIndentedString(endedAt)).append("\n");
    sb.append("    marketplaces: ").append(toIndentedString(marketplaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("status");
    openapiFields.add("startingAt");
    openapiFields.add("startedAt");
    openapiFields.add("endingAt");
    openapiFields.add("endedAt");
    openapiFields.add("marketplaces");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OfferListingDtoV1Publication
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OfferListingDtoV1Publication.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OfferListingDtoV1Publication is not found in the empty JSON string", OfferListingDtoV1Publication.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OfferListingDtoV1Publication.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OfferListingDtoV1Publication` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        OfferStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("startingAt") != null && !jsonObj.get("startingAt").isJsonNull()) && !jsonObj.get("startingAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startingAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startingAt").toString()));
      }
      if ((jsonObj.get("startedAt") != null && !jsonObj.get("startedAt").isJsonNull()) && !jsonObj.get("startedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startedAt").toString()));
      }
      if ((jsonObj.get("endingAt") != null && !jsonObj.get("endingAt").isJsonNull()) && !jsonObj.get("endingAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endingAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endingAt").toString()));
      }
      if ((jsonObj.get("endedAt") != null && !jsonObj.get("endedAt").isJsonNull()) && !jsonObj.get("endedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endedAt").toString()));
      }
      // validate the optional field `marketplaces`
      if (jsonObj.get("marketplaces") != null && !jsonObj.get("marketplaces").isJsonNull()) {
        OfferListingDtoV1PublicationMarketplaces.validateJsonElement(jsonObj.get("marketplaces"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OfferListingDtoV1Publication.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OfferListingDtoV1Publication' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OfferListingDtoV1Publication> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OfferListingDtoV1Publication.class));

       return (TypeAdapter<T>) new TypeAdapter<OfferListingDtoV1Publication>() {
           @Override
           public void write(JsonWriter out, OfferListingDtoV1Publication value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OfferListingDtoV1Publication read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OfferListingDtoV1Publication given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OfferListingDtoV1Publication
   * @throws IOException if the JSON string is invalid with respect to OfferListingDtoV1Publication
   */
  public static OfferListingDtoV1Publication fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OfferListingDtoV1Publication.class);
  }

  /**
   * Convert an instance of OfferListingDtoV1Publication to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

