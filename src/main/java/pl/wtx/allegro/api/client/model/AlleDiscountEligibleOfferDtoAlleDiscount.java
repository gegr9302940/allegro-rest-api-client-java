/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditions;
import pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoAlleDiscountMinimumGuaranteedDiscount;
import pl.wtx.allegro.api.client.model.AlleDiscountRequiredMerchantPriceDto;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * AlleDiscount specific data.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class AlleDiscountEligibleOfferDtoAlleDiscount {
  public static final String SERIALIZED_NAME_CAMPAIGN_CONDITIONS = "campaignConditions";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_CONDITIONS)
  @javax.annotation.Nullable
  private AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditions campaignConditions;

  public static final String SERIALIZED_NAME_REQUIRED_MERCHANT_PRICE = "requiredMerchantPrice";
  @SerializedName(SERIALIZED_NAME_REQUIRED_MERCHANT_PRICE)
  @javax.annotation.Nullable
  private AlleDiscountRequiredMerchantPriceDto requiredMerchantPrice;

  public static final String SERIALIZED_NAME_MINIMUM_GUARANTEED_DISCOUNT = "minimumGuaranteedDiscount";
  @SerializedName(SERIALIZED_NAME_MINIMUM_GUARANTEED_DISCOUNT)
  @javax.annotation.Nullable
  private AlleDiscountEligibleOfferDtoAlleDiscountMinimumGuaranteedDiscount minimumGuaranteedDiscount;

  public AlleDiscountEligibleOfferDtoAlleDiscount() {
  }

  public AlleDiscountEligibleOfferDtoAlleDiscount campaignConditions(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditions campaignConditions) {
    this.campaignConditions = campaignConditions;
    return this;
  }

  /**
   * Get campaignConditions
   * @return campaignConditions
   */
  @javax.annotation.Nullable
  public AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditions getCampaignConditions() {
    return campaignConditions;
  }

  public void setCampaignConditions(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditions campaignConditions) {
    this.campaignConditions = campaignConditions;
  }


  public AlleDiscountEligibleOfferDtoAlleDiscount requiredMerchantPrice(@javax.annotation.Nullable AlleDiscountRequiredMerchantPriceDto requiredMerchantPrice) {
    this.requiredMerchantPrice = requiredMerchantPrice;
    return this;
  }

  /**
   * Get requiredMerchantPrice
   * @return requiredMerchantPrice
   */
  @javax.annotation.Nullable
  public AlleDiscountRequiredMerchantPriceDto getRequiredMerchantPrice() {
    return requiredMerchantPrice;
  }

  public void setRequiredMerchantPrice(@javax.annotation.Nullable AlleDiscountRequiredMerchantPriceDto requiredMerchantPrice) {
    this.requiredMerchantPrice = requiredMerchantPrice;
  }


  public AlleDiscountEligibleOfferDtoAlleDiscount minimumGuaranteedDiscount(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoAlleDiscountMinimumGuaranteedDiscount minimumGuaranteedDiscount) {
    this.minimumGuaranteedDiscount = minimumGuaranteedDiscount;
    return this;
  }

  /**
   * Get minimumGuaranteedDiscount
   * @return minimumGuaranteedDiscount
   */
  @javax.annotation.Nullable
  public AlleDiscountEligibleOfferDtoAlleDiscountMinimumGuaranteedDiscount getMinimumGuaranteedDiscount() {
    return minimumGuaranteedDiscount;
  }

  public void setMinimumGuaranteedDiscount(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoAlleDiscountMinimumGuaranteedDiscount minimumGuaranteedDiscount) {
    this.minimumGuaranteedDiscount = minimumGuaranteedDiscount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlleDiscountEligibleOfferDtoAlleDiscount alleDiscountEligibleOfferDtoAlleDiscount = (AlleDiscountEligibleOfferDtoAlleDiscount) o;
    return Objects.equals(this.campaignConditions, alleDiscountEligibleOfferDtoAlleDiscount.campaignConditions) &&
        Objects.equals(this.requiredMerchantPrice, alleDiscountEligibleOfferDtoAlleDiscount.requiredMerchantPrice) &&
        Objects.equals(this.minimumGuaranteedDiscount, alleDiscountEligibleOfferDtoAlleDiscount.minimumGuaranteedDiscount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignConditions, requiredMerchantPrice, minimumGuaranteedDiscount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlleDiscountEligibleOfferDtoAlleDiscount {\n");
    sb.append("    campaignConditions: ").append(toIndentedString(campaignConditions)).append("\n");
    sb.append("    requiredMerchantPrice: ").append(toIndentedString(requiredMerchantPrice)).append("\n");
    sb.append("    minimumGuaranteedDiscount: ").append(toIndentedString(minimumGuaranteedDiscount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("campaignConditions");
    openapiFields.add("requiredMerchantPrice");
    openapiFields.add("minimumGuaranteedDiscount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlleDiscountEligibleOfferDtoAlleDiscount
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlleDiscountEligibleOfferDtoAlleDiscount.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlleDiscountEligibleOfferDtoAlleDiscount is not found in the empty JSON string", AlleDiscountEligibleOfferDtoAlleDiscount.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlleDiscountEligibleOfferDtoAlleDiscount.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlleDiscountEligibleOfferDtoAlleDiscount` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `campaignConditions`
      if (jsonObj.get("campaignConditions") != null && !jsonObj.get("campaignConditions").isJsonNull()) {
        AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditions.validateJsonElement(jsonObj.get("campaignConditions"));
      }
      // validate the optional field `requiredMerchantPrice`
      if (jsonObj.get("requiredMerchantPrice") != null && !jsonObj.get("requiredMerchantPrice").isJsonNull()) {
        AlleDiscountRequiredMerchantPriceDto.validateJsonElement(jsonObj.get("requiredMerchantPrice"));
      }
      // validate the optional field `minimumGuaranteedDiscount`
      if (jsonObj.get("minimumGuaranteedDiscount") != null && !jsonObj.get("minimumGuaranteedDiscount").isJsonNull()) {
        AlleDiscountEligibleOfferDtoAlleDiscountMinimumGuaranteedDiscount.validateJsonElement(jsonObj.get("minimumGuaranteedDiscount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlleDiscountEligibleOfferDtoAlleDiscount.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlleDiscountEligibleOfferDtoAlleDiscount' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlleDiscountEligibleOfferDtoAlleDiscount> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlleDiscountEligibleOfferDtoAlleDiscount.class));

       return (TypeAdapter<T>) new TypeAdapter<AlleDiscountEligibleOfferDtoAlleDiscount>() {
           @Override
           public void write(JsonWriter out, AlleDiscountEligibleOfferDtoAlleDiscount value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlleDiscountEligibleOfferDtoAlleDiscount read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlleDiscountEligibleOfferDtoAlleDiscount given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlleDiscountEligibleOfferDtoAlleDiscount
   * @throws IOException if the JSON string is invalid with respect to AlleDiscountEligibleOfferDtoAlleDiscount
   */
  public static AlleDiscountEligibleOfferDtoAlleDiscount fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlleDiscountEligibleOfferDtoAlleDiscount.class);
  }

  /**
   * Convert an instance of AlleDiscountEligibleOfferDtoAlleDiscount to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

