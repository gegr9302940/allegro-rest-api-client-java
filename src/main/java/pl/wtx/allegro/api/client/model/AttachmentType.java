/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * offer attachment type
 */
@JsonAdapter(AttachmentType.Adapter.class)
public enum AttachmentType {
  
  MANUAL("MANUAL"),
  
  SPECIAL_OFFER_RULES("SPECIAL_OFFER_RULES"),
  
  COMPETITION_RULES("COMPETITION_RULES"),
  
  BOOK_EXCERPT("BOOK_EXCERPT"),
  
  USER_MANUAL("USER_MANUAL"),
  
  INSTALLATION_INSTRUCTIONS("INSTALLATION_INSTRUCTIONS"),
  
  GAME_INSTRUCTIONS("GAME_INSTRUCTIONS"),
  
  ENERGY_LABEL("ENERGY_LABEL"),
  
  PRODUCT_INFORMATION_SHEET("PRODUCT_INFORMATION_SHEET"),
  
  TIRE_LABEL("TIRE_LABEL"),
  
  SAFETY_INFORMATION_MANUAL("SAFETY_INFORMATION_MANUAL");

  private String value;

  AttachmentType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AttachmentType fromValue(String value) {
    for (AttachmentType b : AttachmentType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AttachmentType> {
    @Override
    public void write(final JsonWriter jsonWriter, final AttachmentType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AttachmentType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AttachmentType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AttachmentType.fromValue(value);
  }
}

