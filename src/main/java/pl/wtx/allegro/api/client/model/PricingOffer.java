/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import pl.wtx.allegro.api.client.model.Category;
import pl.wtx.allegro.api.client.model.JustId;
import pl.wtx.allegro.api.client.model.Parameter;
import pl.wtx.allegro.api.client.model.PricingPublication;
import pl.wtx.allegro.api.client.model.Promotion;
import pl.wtx.allegro.api.client.model.SellingModeWithNetPrice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * Single offer data.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PricingOffer {
  public static final String SERIALIZED_NAME_FUNDRAISING_CAMPAIGN = "fundraisingCampaign";
  @SerializedName(SERIALIZED_NAME_FUNDRAISING_CAMPAIGN)
  @javax.annotation.Nullable
  private JustId fundraisingCampaign;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  @javax.annotation.Nullable
  private Category category;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  @javax.annotation.Nullable
  private List<Parameter> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROMOTION = "promotion";
  @SerializedName(SERIALIZED_NAME_PROMOTION)
  @javax.annotation.Nullable
  private Promotion promotion;

  public static final String SERIALIZED_NAME_PUBLICATION = "publication";
  @SerializedName(SERIALIZED_NAME_PUBLICATION)
  @javax.annotation.Nullable
  private PricingPublication publication;

  public static final String SERIALIZED_NAME_SELLING_MODE = "sellingMode";
  @SerializedName(SERIALIZED_NAME_SELLING_MODE)
  @javax.annotation.Nullable
  private SellingModeWithNetPrice sellingMode;

  public PricingOffer() {
  }

  public PricingOffer fundraisingCampaign(@javax.annotation.Nullable JustId fundraisingCampaign) {
    this.fundraisingCampaign = fundraisingCampaign;
    return this;
  }

  /**
   * Get fundraisingCampaign
   * @return fundraisingCampaign
   */
  @javax.annotation.Nullable
  public JustId getFundraisingCampaign() {
    return fundraisingCampaign;
  }

  public void setFundraisingCampaign(@javax.annotation.Nullable JustId fundraisingCampaign) {
    this.fundraisingCampaign = fundraisingCampaign;
  }


  public PricingOffer id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public PricingOffer category(@javax.annotation.Nullable Category category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public Category getCategory() {
    return category;
  }

  public void setCategory(@javax.annotation.Nullable Category category) {
    this.category = category;
  }


  public PricingOffer parameters(@javax.annotation.Nullable List<Parameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public PricingOffer addParametersItem(Parameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<Parameter> getParameters() {
    return parameters;
  }

  public void setParameters(@javax.annotation.Nullable List<Parameter> parameters) {
    this.parameters = parameters;
  }


  public PricingOffer promotion(@javax.annotation.Nullable Promotion promotion) {
    this.promotion = promotion;
    return this;
  }

  /**
   * Get promotion
   * @return promotion
   */
  @javax.annotation.Nullable
  public Promotion getPromotion() {
    return promotion;
  }

  public void setPromotion(@javax.annotation.Nullable Promotion promotion) {
    this.promotion = promotion;
  }


  public PricingOffer publication(@javax.annotation.Nullable PricingPublication publication) {
    this.publication = publication;
    return this;
  }

  /**
   * Get publication
   * @return publication
   */
  @javax.annotation.Nullable
  public PricingPublication getPublication() {
    return publication;
  }

  public void setPublication(@javax.annotation.Nullable PricingPublication publication) {
    this.publication = publication;
  }


  public PricingOffer sellingMode(@javax.annotation.Nullable SellingModeWithNetPrice sellingMode) {
    this.sellingMode = sellingMode;
    return this;
  }

  /**
   * Get sellingMode
   * @return sellingMode
   */
  @javax.annotation.Nullable
  public SellingModeWithNetPrice getSellingMode() {
    return sellingMode;
  }

  public void setSellingMode(@javax.annotation.Nullable SellingModeWithNetPrice sellingMode) {
    this.sellingMode = sellingMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PricingOffer pricingOffer = (PricingOffer) o;
    return Objects.equals(this.fundraisingCampaign, pricingOffer.fundraisingCampaign) &&
        Objects.equals(this.id, pricingOffer.id) &&
        Objects.equals(this.category, pricingOffer.category) &&
        Objects.equals(this.parameters, pricingOffer.parameters) &&
        Objects.equals(this.promotion, pricingOffer.promotion) &&
        Objects.equals(this.publication, pricingOffer.publication) &&
        Objects.equals(this.sellingMode, pricingOffer.sellingMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fundraisingCampaign, id, category, parameters, promotion, publication, sellingMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PricingOffer {\n");
    sb.append("    fundraisingCampaign: ").append(toIndentedString(fundraisingCampaign)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    promotion: ").append(toIndentedString(promotion)).append("\n");
    sb.append("    publication: ").append(toIndentedString(publication)).append("\n");
    sb.append("    sellingMode: ").append(toIndentedString(sellingMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fundraisingCampaign");
    openapiFields.add("id");
    openapiFields.add("category");
    openapiFields.add("parameters");
    openapiFields.add("promotion");
    openapiFields.add("publication");
    openapiFields.add("sellingMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PricingOffer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PricingOffer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PricingOffer is not found in the empty JSON string", PricingOffer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PricingOffer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PricingOffer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `fundraisingCampaign`
      if (jsonObj.get("fundraisingCampaign") != null && !jsonObj.get("fundraisingCampaign").isJsonNull()) {
        JustId.validateJsonElement(jsonObj.get("fundraisingCampaign"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        Category.validateJsonElement(jsonObj.get("category"));
      }
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
        if (jsonArrayparameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
          }

          // validate the optional field `parameters` (array)
          for (int i = 0; i < jsonArrayparameters.size(); i++) {
            Parameter.validateJsonElement(jsonArrayparameters.get(i));
          };
        }
      }
      // validate the optional field `promotion`
      if (jsonObj.get("promotion") != null && !jsonObj.get("promotion").isJsonNull()) {
        Promotion.validateJsonElement(jsonObj.get("promotion"));
      }
      // validate the optional field `publication`
      if (jsonObj.get("publication") != null && !jsonObj.get("publication").isJsonNull()) {
        PricingPublication.validateJsonElement(jsonObj.get("publication"));
      }
      // validate the optional field `sellingMode`
      if (jsonObj.get("sellingMode") != null && !jsonObj.get("sellingMode").isJsonNull()) {
        SellingModeWithNetPrice.validateJsonElement(jsonObj.get("sellingMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PricingOffer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PricingOffer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PricingOffer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PricingOffer.class));

       return (TypeAdapter<T>) new TypeAdapter<PricingOffer>() {
           @Override
           public void write(JsonWriter out, PricingOffer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PricingOffer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PricingOffer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PricingOffer
   * @throws IOException if the JSON string is invalid with respect to PricingOffer
   */
  public static PricingOffer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PricingOffer.class);
  }

  /**
   * Convert an instance of PricingOffer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

