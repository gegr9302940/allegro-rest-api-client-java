/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.wtx.allegro.api.client.model.AfterSalesServices;
import pl.wtx.allegro.api.client.model.ExternalId;
import pl.wtx.allegro.api.client.model.JustId;
import pl.wtx.allegro.api.client.model.OfferAdditionalServices;
import pl.wtx.allegro.api.client.model.OfferCategory;
import pl.wtx.allegro.api.client.model.OfferListingDtoImage;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1AdditionalMarketplace;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1B2b;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1Delivery;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1Publication;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1SaleInfo;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1SellingMode;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1Stats;
import pl.wtx.allegro.api.client.model.OfferListingDtoV1Stock;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * An offer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class OfferListingDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  @javax.annotation.Nullable
  private OfferCategory category;

  public static final String SERIALIZED_NAME_PRIMARY_IMAGE = "primaryImage";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IMAGE)
  @javax.annotation.Nullable
  private OfferListingDtoImage primaryImage;

  public static final String SERIALIZED_NAME_SELLING_MODE = "sellingMode";
  @SerializedName(SERIALIZED_NAME_SELLING_MODE)
  @javax.annotation.Nullable
  private OfferListingDtoV1SellingMode sellingMode;

  public static final String SERIALIZED_NAME_SALE_INFO = "saleInfo";
  @SerializedName(SERIALIZED_NAME_SALE_INFO)
  @javax.annotation.Nullable
  private OfferListingDtoV1SaleInfo saleInfo;

  public static final String SERIALIZED_NAME_STOCK = "stock";
  @SerializedName(SERIALIZED_NAME_STOCK)
  @javax.annotation.Nullable
  private OfferListingDtoV1Stock stock;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  @javax.annotation.Nullable
  private OfferListingDtoV1Stats stats;

  public static final String SERIALIZED_NAME_PUBLICATION = "publication";
  @SerializedName(SERIALIZED_NAME_PUBLICATION)
  @javax.annotation.Nullable
  private OfferListingDtoV1Publication publication;

  public static final String SERIALIZED_NAME_AFTER_SALES_SERVICES = "afterSalesServices";
  @SerializedName(SERIALIZED_NAME_AFTER_SALES_SERVICES)
  @javax.annotation.Nullable
  private AfterSalesServices afterSalesServices;

  public static final String SERIALIZED_NAME_ADDITIONAL_SERVICES = "additionalServices";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SERVICES)
  @javax.annotation.Nullable
  private OfferAdditionalServices additionalServices;

  public static final String SERIALIZED_NAME_EXTERNAL = "external";
  @SerializedName(SERIALIZED_NAME_EXTERNAL)
  @javax.annotation.Nullable
  private ExternalId external;

  public static final String SERIALIZED_NAME_DELIVERY = "delivery";
  @SerializedName(SERIALIZED_NAME_DELIVERY)
  @javax.annotation.Nullable
  private OfferListingDtoV1Delivery delivery;

  public static final String SERIALIZED_NAME_B2B = "b2b";
  @SerializedName(SERIALIZED_NAME_B2B)
  @javax.annotation.Nullable
  private OfferListingDtoV1B2b b2b;

  public static final String SERIALIZED_NAME_FUNDRAISING_CAMPAIGN = "fundraisingCampaign";
  @SerializedName(SERIALIZED_NAME_FUNDRAISING_CAMPAIGN)
  @javax.annotation.Nullable
  private JustId fundraisingCampaign;

  public static final String SERIALIZED_NAME_ADDITIONAL_MARKETPLACES = "additionalMarketplaces";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_MARKETPLACES)
  @javax.annotation.Nullable
  private Map<String, OfferListingDtoV1AdditionalMarketplace> additionalMarketplaces = new HashMap<>();

  public OfferListingDto() {
  }

  public OfferListingDto id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * The offer ID.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public OfferListingDto name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The title of the offer.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public OfferListingDto category(@javax.annotation.Nullable OfferCategory category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public OfferCategory getCategory() {
    return category;
  }

  public void setCategory(@javax.annotation.Nullable OfferCategory category) {
    this.category = category;
  }


  public OfferListingDto primaryImage(@javax.annotation.Nullable OfferListingDtoImage primaryImage) {
    this.primaryImage = primaryImage;
    return this;
  }

  /**
   * Get primaryImage
   * @return primaryImage
   */
  @javax.annotation.Nullable
  public OfferListingDtoImage getPrimaryImage() {
    return primaryImage;
  }

  public void setPrimaryImage(@javax.annotation.Nullable OfferListingDtoImage primaryImage) {
    this.primaryImage = primaryImage;
  }


  public OfferListingDto sellingMode(@javax.annotation.Nullable OfferListingDtoV1SellingMode sellingMode) {
    this.sellingMode = sellingMode;
    return this;
  }

  /**
   * Get sellingMode
   * @return sellingMode
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1SellingMode getSellingMode() {
    return sellingMode;
  }

  public void setSellingMode(@javax.annotation.Nullable OfferListingDtoV1SellingMode sellingMode) {
    this.sellingMode = sellingMode;
  }


  public OfferListingDto saleInfo(@javax.annotation.Nullable OfferListingDtoV1SaleInfo saleInfo) {
    this.saleInfo = saleInfo;
    return this;
  }

  /**
   * Get saleInfo
   * @return saleInfo
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1SaleInfo getSaleInfo() {
    return saleInfo;
  }

  public void setSaleInfo(@javax.annotation.Nullable OfferListingDtoV1SaleInfo saleInfo) {
    this.saleInfo = saleInfo;
  }


  public OfferListingDto stock(@javax.annotation.Nullable OfferListingDtoV1Stock stock) {
    this.stock = stock;
    return this;
  }

  /**
   * Get stock
   * @return stock
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1Stock getStock() {
    return stock;
  }

  public void setStock(@javax.annotation.Nullable OfferListingDtoV1Stock stock) {
    this.stock = stock;
  }


  public OfferListingDto stats(@javax.annotation.Nullable OfferListingDtoV1Stats stats) {
    this.stats = stats;
    return this;
  }

  /**
   * Get stats
   * @return stats
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1Stats getStats() {
    return stats;
  }

  public void setStats(@javax.annotation.Nullable OfferListingDtoV1Stats stats) {
    this.stats = stats;
  }


  public OfferListingDto publication(@javax.annotation.Nullable OfferListingDtoV1Publication publication) {
    this.publication = publication;
    return this;
  }

  /**
   * Get publication
   * @return publication
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1Publication getPublication() {
    return publication;
  }

  public void setPublication(@javax.annotation.Nullable OfferListingDtoV1Publication publication) {
    this.publication = publication;
  }


  public OfferListingDto afterSalesServices(@javax.annotation.Nullable AfterSalesServices afterSalesServices) {
    this.afterSalesServices = afterSalesServices;
    return this;
  }

  /**
   * Get afterSalesServices
   * @return afterSalesServices
   */
  @javax.annotation.Nullable
  public AfterSalesServices getAfterSalesServices() {
    return afterSalesServices;
  }

  public void setAfterSalesServices(@javax.annotation.Nullable AfterSalesServices afterSalesServices) {
    this.afterSalesServices = afterSalesServices;
  }


  public OfferListingDto additionalServices(@javax.annotation.Nullable OfferAdditionalServices additionalServices) {
    this.additionalServices = additionalServices;
    return this;
  }

  /**
   * Get additionalServices
   * @return additionalServices
   */
  @javax.annotation.Nullable
  public OfferAdditionalServices getAdditionalServices() {
    return additionalServices;
  }

  public void setAdditionalServices(@javax.annotation.Nullable OfferAdditionalServices additionalServices) {
    this.additionalServices = additionalServices;
  }


  public OfferListingDto external(@javax.annotation.Nullable ExternalId external) {
    this.external = external;
    return this;
  }

  /**
   * Get external
   * @return external
   */
  @javax.annotation.Nullable
  public ExternalId getExternal() {
    return external;
  }

  public void setExternal(@javax.annotation.Nullable ExternalId external) {
    this.external = external;
  }


  public OfferListingDto delivery(@javax.annotation.Nullable OfferListingDtoV1Delivery delivery) {
    this.delivery = delivery;
    return this;
  }

  /**
   * Get delivery
   * @return delivery
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1Delivery getDelivery() {
    return delivery;
  }

  public void setDelivery(@javax.annotation.Nullable OfferListingDtoV1Delivery delivery) {
    this.delivery = delivery;
  }


  public OfferListingDto b2b(@javax.annotation.Nullable OfferListingDtoV1B2b b2b) {
    this.b2b = b2b;
    return this;
  }

  /**
   * Get b2b
   * @return b2b
   */
  @javax.annotation.Nullable
  public OfferListingDtoV1B2b getB2b() {
    return b2b;
  }

  public void setB2b(@javax.annotation.Nullable OfferListingDtoV1B2b b2b) {
    this.b2b = b2b;
  }


  public OfferListingDto fundraisingCampaign(@javax.annotation.Nullable JustId fundraisingCampaign) {
    this.fundraisingCampaign = fundraisingCampaign;
    return this;
  }

  /**
   * Get fundraisingCampaign
   * @return fundraisingCampaign
   */
  @javax.annotation.Nullable
  public JustId getFundraisingCampaign() {
    return fundraisingCampaign;
  }

  public void setFundraisingCampaign(@javax.annotation.Nullable JustId fundraisingCampaign) {
    this.fundraisingCampaign = fundraisingCampaign;
  }


  public OfferListingDto additionalMarketplaces(@javax.annotation.Nullable Map<String, OfferListingDtoV1AdditionalMarketplace> additionalMarketplaces) {
    this.additionalMarketplaces = additionalMarketplaces;
    return this;
  }

  public OfferListingDto putAdditionalMarketplacesItem(String key, OfferListingDtoV1AdditionalMarketplace additionalMarketplacesItem) {
    if (this.additionalMarketplaces == null) {
      this.additionalMarketplaces = new HashMap<>();
    }
    this.additionalMarketplaces.put(key, additionalMarketplacesItem);
    return this;
  }

  /**
   * Properties of the offer for each additional marketplace.
   * @return additionalMarketplaces
   */
  @javax.annotation.Nullable
  public Map<String, OfferListingDtoV1AdditionalMarketplace> getAdditionalMarketplaces() {
    return additionalMarketplaces;
  }

  public void setAdditionalMarketplaces(@javax.annotation.Nullable Map<String, OfferListingDtoV1AdditionalMarketplace> additionalMarketplaces) {
    this.additionalMarketplaces = additionalMarketplaces;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferListingDto offerListingDto = (OfferListingDto) o;
    return Objects.equals(this.id, offerListingDto.id) &&
        Objects.equals(this.name, offerListingDto.name) &&
        Objects.equals(this.category, offerListingDto.category) &&
        Objects.equals(this.primaryImage, offerListingDto.primaryImage) &&
        Objects.equals(this.sellingMode, offerListingDto.sellingMode) &&
        Objects.equals(this.saleInfo, offerListingDto.saleInfo) &&
        Objects.equals(this.stock, offerListingDto.stock) &&
        Objects.equals(this.stats, offerListingDto.stats) &&
        Objects.equals(this.publication, offerListingDto.publication) &&
        Objects.equals(this.afterSalesServices, offerListingDto.afterSalesServices) &&
        Objects.equals(this.additionalServices, offerListingDto.additionalServices) &&
        Objects.equals(this.external, offerListingDto.external) &&
        Objects.equals(this.delivery, offerListingDto.delivery) &&
        Objects.equals(this.b2b, offerListingDto.b2b) &&
        Objects.equals(this.fundraisingCampaign, offerListingDto.fundraisingCampaign) &&
        Objects.equals(this.additionalMarketplaces, offerListingDto.additionalMarketplaces);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, category, primaryImage, sellingMode, saleInfo, stock, stats, publication, afterSalesServices, additionalServices, external, delivery, b2b, fundraisingCampaign, additionalMarketplaces);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferListingDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    primaryImage: ").append(toIndentedString(primaryImage)).append("\n");
    sb.append("    sellingMode: ").append(toIndentedString(sellingMode)).append("\n");
    sb.append("    saleInfo: ").append(toIndentedString(saleInfo)).append("\n");
    sb.append("    stock: ").append(toIndentedString(stock)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    publication: ").append(toIndentedString(publication)).append("\n");
    sb.append("    afterSalesServices: ").append(toIndentedString(afterSalesServices)).append("\n");
    sb.append("    additionalServices: ").append(toIndentedString(additionalServices)).append("\n");
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("    b2b: ").append(toIndentedString(b2b)).append("\n");
    sb.append("    fundraisingCampaign: ").append(toIndentedString(fundraisingCampaign)).append("\n");
    sb.append("    additionalMarketplaces: ").append(toIndentedString(additionalMarketplaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("category");
    openapiFields.add("primaryImage");
    openapiFields.add("sellingMode");
    openapiFields.add("saleInfo");
    openapiFields.add("stock");
    openapiFields.add("stats");
    openapiFields.add("publication");
    openapiFields.add("afterSalesServices");
    openapiFields.add("additionalServices");
    openapiFields.add("external");
    openapiFields.add("delivery");
    openapiFields.add("b2b");
    openapiFields.add("fundraisingCampaign");
    openapiFields.add("additionalMarketplaces");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OfferListingDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OfferListingDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OfferListingDto is not found in the empty JSON string", OfferListingDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OfferListingDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OfferListingDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        OfferCategory.validateJsonElement(jsonObj.get("category"));
      }
      // validate the optional field `primaryImage`
      if (jsonObj.get("primaryImage") != null && !jsonObj.get("primaryImage").isJsonNull()) {
        OfferListingDtoImage.validateJsonElement(jsonObj.get("primaryImage"));
      }
      // validate the optional field `sellingMode`
      if (jsonObj.get("sellingMode") != null && !jsonObj.get("sellingMode").isJsonNull()) {
        OfferListingDtoV1SellingMode.validateJsonElement(jsonObj.get("sellingMode"));
      }
      // validate the optional field `saleInfo`
      if (jsonObj.get("saleInfo") != null && !jsonObj.get("saleInfo").isJsonNull()) {
        OfferListingDtoV1SaleInfo.validateJsonElement(jsonObj.get("saleInfo"));
      }
      // validate the optional field `stock`
      if (jsonObj.get("stock") != null && !jsonObj.get("stock").isJsonNull()) {
        OfferListingDtoV1Stock.validateJsonElement(jsonObj.get("stock"));
      }
      // validate the optional field `stats`
      if (jsonObj.get("stats") != null && !jsonObj.get("stats").isJsonNull()) {
        OfferListingDtoV1Stats.validateJsonElement(jsonObj.get("stats"));
      }
      // validate the optional field `publication`
      if (jsonObj.get("publication") != null && !jsonObj.get("publication").isJsonNull()) {
        OfferListingDtoV1Publication.validateJsonElement(jsonObj.get("publication"));
      }
      // validate the optional field `afterSalesServices`
      if (jsonObj.get("afterSalesServices") != null && !jsonObj.get("afterSalesServices").isJsonNull()) {
        AfterSalesServices.validateJsonElement(jsonObj.get("afterSalesServices"));
      }
      // validate the optional field `additionalServices`
      if (jsonObj.get("additionalServices") != null && !jsonObj.get("additionalServices").isJsonNull()) {
        OfferAdditionalServices.validateJsonElement(jsonObj.get("additionalServices"));
      }
      // validate the optional field `external`
      if (jsonObj.get("external") != null && !jsonObj.get("external").isJsonNull()) {
        ExternalId.validateJsonElement(jsonObj.get("external"));
      }
      // validate the optional field `delivery`
      if (jsonObj.get("delivery") != null && !jsonObj.get("delivery").isJsonNull()) {
        OfferListingDtoV1Delivery.validateJsonElement(jsonObj.get("delivery"));
      }
      // validate the optional field `b2b`
      if (jsonObj.get("b2b") != null && !jsonObj.get("b2b").isJsonNull()) {
        OfferListingDtoV1B2b.validateJsonElement(jsonObj.get("b2b"));
      }
      // validate the optional field `fundraisingCampaign`
      if (jsonObj.get("fundraisingCampaign") != null && !jsonObj.get("fundraisingCampaign").isJsonNull()) {
        JustId.validateJsonElement(jsonObj.get("fundraisingCampaign"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OfferListingDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OfferListingDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OfferListingDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OfferListingDto.class));

       return (TypeAdapter<T>) new TypeAdapter<OfferListingDto>() {
           @Override
           public void write(JsonWriter out, OfferListingDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OfferListingDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OfferListingDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OfferListingDto
   * @throws IOException if the JSON string is invalid with respect to OfferListingDto
   */
  public static OfferListingDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OfferListingDto.class);
  }

  /**
   * Convert an instance of OfferListingDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

