/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import pl.wtx.allegro.api.client.model.AdditionalMarketplacesResponseValue;
import pl.wtx.allegro.api.client.model.AfterSalesServices;
import pl.wtx.allegro.api.client.model.B2b;
import pl.wtx.allegro.api.client.model.CompatibilityListProductOfferResponse;
import pl.wtx.allegro.api.client.model.Contact;
import pl.wtx.allegro.api.client.model.DeliveryProductOfferResponse;
import pl.wtx.allegro.api.client.model.DiscountsProductOfferResponse;
import pl.wtx.allegro.api.client.model.ExternalId;
import pl.wtx.allegro.api.client.model.Location;
import pl.wtx.allegro.api.client.model.MessageToSellerSettings;
import pl.wtx.allegro.api.client.model.OfferCategory;
import pl.wtx.allegro.api.client.model.OfferTaxSettings;
import pl.wtx.allegro.api.client.model.ParameterProductOfferResponse;
import pl.wtx.allegro.api.client.model.Payments;
import pl.wtx.allegro.api.client.model.ProductOfferAdditionalServicesResponse;
import pl.wtx.allegro.api.client.model.ProductOfferAttachmentInner;
import pl.wtx.allegro.api.client.model.ProductOfferFundraisingCampaignResponse;
import pl.wtx.allegro.api.client.model.SaleProductOfferPublicationResponse;
import pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1AllOfProductSet;
import pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1AllOfWarnings;
import pl.wtx.allegro.api.client.model.SellingMode;
import pl.wtx.allegro.api.client.model.SizeTable;
import pl.wtx.allegro.api.client.model.StandardizedDescription;
import pl.wtx.allegro.api.client.model.Stock;
import pl.wtx.allegro.api.client.model.Validation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * SaleProductOfferResponseV1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class SaleProductOfferResponseV1 {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_PAYMENTS = "payments";
  @SerializedName(SERIALIZED_NAME_PAYMENTS)
  @javax.annotation.Nullable
  private Payments payments;

  public static final String SERIALIZED_NAME_SELLING_MODE = "sellingMode";
  @SerializedName(SERIALIZED_NAME_SELLING_MODE)
  @javax.annotation.Nullable
  private SellingMode sellingMode;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  @javax.annotation.Nullable
  private Location location;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  @javax.annotation.Nullable
  private List<String> images = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private StandardizedDescription description;

  public static final String SERIALIZED_NAME_EXTERNAL = "external";
  @SerializedName(SERIALIZED_NAME_EXTERNAL)
  @javax.annotation.Nullable
  private ExternalId external;

  public static final String SERIALIZED_NAME_SIZE_TABLE = "sizeTable";
  @SerializedName(SERIALIZED_NAME_SIZE_TABLE)
  @javax.annotation.Nullable
  private SizeTable sizeTable;

  public static final String SERIALIZED_NAME_TAX_SETTINGS = "taxSettings";
  @SerializedName(SERIALIZED_NAME_TAX_SETTINGS)
  @javax.annotation.Nullable
  private OfferTaxSettings taxSettings;

  public static final String SERIALIZED_NAME_MESSAGE_TO_SELLER_SETTINGS = "messageToSellerSettings";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TO_SELLER_SETTINGS)
  @javax.annotation.Nullable
  private MessageToSellerSettings messageToSellerSettings;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_PRODUCT_SET = "productSet";
  @SerializedName(SERIALIZED_NAME_PRODUCT_SET)
  @javax.annotation.Nullable
  private List<SaleProductOfferResponseV1AllOfProductSet> productSet = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  @javax.annotation.Nullable
  private OfferCategory category;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  @javax.annotation.Nullable
  private List<ProductOfferAttachmentInner> attachments = new ArrayList<>();

  public static final String SERIALIZED_NAME_FUNDRAISING_CAMPAIGN = "fundraisingCampaign";
  @SerializedName(SERIALIZED_NAME_FUNDRAISING_CAMPAIGN)
  @javax.annotation.Nullable
  private ProductOfferFundraisingCampaignResponse fundraisingCampaign;

  public static final String SERIALIZED_NAME_ADDITIONAL_SERVICES = "additionalServices";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SERVICES)
  @javax.annotation.Nullable
  private ProductOfferAdditionalServicesResponse additionalServices;

  public static final String SERIALIZED_NAME_DELIVERY = "delivery";
  @SerializedName(SERIALIZED_NAME_DELIVERY)
  @javax.annotation.Nullable
  private DeliveryProductOfferResponse delivery;

  public static final String SERIALIZED_NAME_PUBLICATION = "publication";
  @SerializedName(SERIALIZED_NAME_PUBLICATION)
  @javax.annotation.Nullable
  private SaleProductOfferPublicationResponse publication;

  public static final String SERIALIZED_NAME_ADDITIONAL_MARKETPLACES = "additionalMarketplaces";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_MARKETPLACES)
  @javax.annotation.Nullable
  private Map<String, AdditionalMarketplacesResponseValue> additionalMarketplaces = new HashMap<>();

  public static final String SERIALIZED_NAME_B2B = "b2b";
  @SerializedName(SERIALIZED_NAME_B2B)
  @javax.annotation.Nullable
  private B2b b2b;

  public static final String SERIALIZED_NAME_COMPATIBILITY_LIST = "compatibilityList";
  @SerializedName(SERIALIZED_NAME_COMPATIBILITY_LIST)
  @javax.annotation.Nullable
  private CompatibilityListProductOfferResponse compatibilityList;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  @javax.annotation.Nullable
  private String language;

  public static final String SERIALIZED_NAME_VALIDATION = "validation";
  @SerializedName(SERIALIZED_NAME_VALIDATION)
  @javax.annotation.Nullable
  private Validation validation;

  public static final String SERIALIZED_NAME_WARNINGS = "warnings";
  @SerializedName(SERIALIZED_NAME_WARNINGS)
  @javax.annotation.Nullable
  private SaleProductOfferResponseV1AllOfWarnings warnings;

  public static final String SERIALIZED_NAME_AFTER_SALES_SERVICES = "afterSalesServices";
  @SerializedName(SERIALIZED_NAME_AFTER_SALES_SERVICES)
  @javax.annotation.Nullable
  private AfterSalesServices afterSalesServices;

  public static final String SERIALIZED_NAME_DISCOUNTS = "discounts";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS)
  @javax.annotation.Nullable
  private DiscountsProductOfferResponse discounts;

  public static final String SERIALIZED_NAME_STOCK = "stock";
  @SerializedName(SERIALIZED_NAME_STOCK)
  @javax.annotation.Nullable
  private Stock stock;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  @javax.annotation.Nullable
  private List<ParameterProductOfferResponse> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  @javax.annotation.Nullable
  private Contact contact;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime updatedAt;

  public SaleProductOfferResponseV1() {
  }

  public SaleProductOfferResponseV1 name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Name (title) of an offer. Length cannot be more than 75 characters. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-jednym-requestem-wystawic-oferte-powiazana-z-produktem-D7Kj9gw4xFA#tytul-oferty\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt;  / &lt;a href&#x3D;\&quot;../../tutorials/list-offer-assigned-product-one-request-D7Kj9M71Bu6#offer-title\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt; .
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public SaleProductOfferResponseV1 payments(@javax.annotation.Nullable Payments payments) {
    this.payments = payments;
    return this;
  }

  /**
   * Get payments
   * @return payments
   */
  @javax.annotation.Nullable
  public Payments getPayments() {
    return payments;
  }

  public void setPayments(@javax.annotation.Nullable Payments payments) {
    this.payments = payments;
  }


  public SaleProductOfferResponseV1 sellingMode(@javax.annotation.Nullable SellingMode sellingMode) {
    this.sellingMode = sellingMode;
    return this;
  }

  /**
   * Get sellingMode
   * @return sellingMode
   */
  @javax.annotation.Nullable
  public SellingMode getSellingMode() {
    return sellingMode;
  }

  public void setSellingMode(@javax.annotation.Nullable SellingMode sellingMode) {
    this.sellingMode = sellingMode;
  }


  public SaleProductOfferResponseV1 location(@javax.annotation.Nullable Location location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public Location getLocation() {
    return location;
  }

  public void setLocation(@javax.annotation.Nullable Location location) {
    this.location = location;
  }


  public SaleProductOfferResponseV1 images(@javax.annotation.Nullable List<String> images) {
    this.images = images;
    return this;
  }

  public SaleProductOfferResponseV1 addImagesItem(String imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * Get images
   * @return images
   */
  @javax.annotation.Nullable
  public List<String> getImages() {
    return images;
  }

  public void setImages(@javax.annotation.Nullable List<String> images) {
    this.images = images;
  }


  public SaleProductOfferResponseV1 description(@javax.annotation.Nullable StandardizedDescription description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public StandardizedDescription getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable StandardizedDescription description) {
    this.description = description;
  }


  public SaleProductOfferResponseV1 external(@javax.annotation.Nullable ExternalId external) {
    this.external = external;
    return this;
  }

  /**
   * Get external
   * @return external
   */
  @javax.annotation.Nullable
  public ExternalId getExternal() {
    return external;
  }

  public void setExternal(@javax.annotation.Nullable ExternalId external) {
    this.external = external;
  }


  public SaleProductOfferResponseV1 sizeTable(@javax.annotation.Nullable SizeTable sizeTable) {
    this.sizeTable = sizeTable;
    return this;
  }

  /**
   * Get sizeTable
   * @return sizeTable
   */
  @javax.annotation.Nullable
  public SizeTable getSizeTable() {
    return sizeTable;
  }

  public void setSizeTable(@javax.annotation.Nullable SizeTable sizeTable) {
    this.sizeTable = sizeTable;
  }


  public SaleProductOfferResponseV1 taxSettings(@javax.annotation.Nullable OfferTaxSettings taxSettings) {
    this.taxSettings = taxSettings;
    return this;
  }

  /**
   * Get taxSettings
   * @return taxSettings
   */
  @javax.annotation.Nullable
  public OfferTaxSettings getTaxSettings() {
    return taxSettings;
  }

  public void setTaxSettings(@javax.annotation.Nullable OfferTaxSettings taxSettings) {
    this.taxSettings = taxSettings;
  }


  public SaleProductOfferResponseV1 messageToSellerSettings(@javax.annotation.Nullable MessageToSellerSettings messageToSellerSettings) {
    this.messageToSellerSettings = messageToSellerSettings;
    return this;
  }

  /**
   * Get messageToSellerSettings
   * @return messageToSellerSettings
   */
  @javax.annotation.Nullable
  public MessageToSellerSettings getMessageToSellerSettings() {
    return messageToSellerSettings;
  }

  public void setMessageToSellerSettings(@javax.annotation.Nullable MessageToSellerSettings messageToSellerSettings) {
    this.messageToSellerSettings = messageToSellerSettings;
  }


  public SaleProductOfferResponseV1 id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public SaleProductOfferResponseV1 productSet(@javax.annotation.Nullable List<SaleProductOfferResponseV1AllOfProductSet> productSet) {
    this.productSet = productSet;
    return this;
  }

  public SaleProductOfferResponseV1 addProductSetItem(SaleProductOfferResponseV1AllOfProductSet productSetItem) {
    if (this.productSet == null) {
      this.productSet = new ArrayList<>();
    }
    this.productSet.add(productSetItem);
    return this;
  }

  /**
   * Get productSet
   * @return productSet
   */
  @javax.annotation.Nullable
  public List<SaleProductOfferResponseV1AllOfProductSet> getProductSet() {
    return productSet;
  }

  public void setProductSet(@javax.annotation.Nullable List<SaleProductOfferResponseV1AllOfProductSet> productSet) {
    this.productSet = productSet;
  }


  public SaleProductOfferResponseV1 category(@javax.annotation.Nullable OfferCategory category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public OfferCategory getCategory() {
    return category;
  }

  public void setCategory(@javax.annotation.Nullable OfferCategory category) {
    this.category = category;
  }


  public SaleProductOfferResponseV1 attachments(@javax.annotation.Nullable List<ProductOfferAttachmentInner> attachments) {
    this.attachments = attachments;
    return this;
  }

  public SaleProductOfferResponseV1 addAttachmentsItem(ProductOfferAttachmentInner attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

  /**
   * An array of offer attachments.
   * @return attachments
   */
  @javax.annotation.Nullable
  public List<ProductOfferAttachmentInner> getAttachments() {
    return attachments;
  }

  public void setAttachments(@javax.annotation.Nullable List<ProductOfferAttachmentInner> attachments) {
    this.attachments = attachments;
  }


  public SaleProductOfferResponseV1 fundraisingCampaign(@javax.annotation.Nullable ProductOfferFundraisingCampaignResponse fundraisingCampaign) {
    this.fundraisingCampaign = fundraisingCampaign;
    return this;
  }

  /**
   * Get fundraisingCampaign
   * @return fundraisingCampaign
   */
  @javax.annotation.Nullable
  public ProductOfferFundraisingCampaignResponse getFundraisingCampaign() {
    return fundraisingCampaign;
  }

  public void setFundraisingCampaign(@javax.annotation.Nullable ProductOfferFundraisingCampaignResponse fundraisingCampaign) {
    this.fundraisingCampaign = fundraisingCampaign;
  }


  public SaleProductOfferResponseV1 additionalServices(@javax.annotation.Nullable ProductOfferAdditionalServicesResponse additionalServices) {
    this.additionalServices = additionalServices;
    return this;
  }

  /**
   * Get additionalServices
   * @return additionalServices
   */
  @javax.annotation.Nullable
  public ProductOfferAdditionalServicesResponse getAdditionalServices() {
    return additionalServices;
  }

  public void setAdditionalServices(@javax.annotation.Nullable ProductOfferAdditionalServicesResponse additionalServices) {
    this.additionalServices = additionalServices;
  }


  public SaleProductOfferResponseV1 delivery(@javax.annotation.Nullable DeliveryProductOfferResponse delivery) {
    this.delivery = delivery;
    return this;
  }

  /**
   * Get delivery
   * @return delivery
   */
  @javax.annotation.Nullable
  public DeliveryProductOfferResponse getDelivery() {
    return delivery;
  }

  public void setDelivery(@javax.annotation.Nullable DeliveryProductOfferResponse delivery) {
    this.delivery = delivery;
  }


  public SaleProductOfferResponseV1 publication(@javax.annotation.Nullable SaleProductOfferPublicationResponse publication) {
    this.publication = publication;
    return this;
  }

  /**
   * Get publication
   * @return publication
   */
  @javax.annotation.Nullable
  public SaleProductOfferPublicationResponse getPublication() {
    return publication;
  }

  public void setPublication(@javax.annotation.Nullable SaleProductOfferPublicationResponse publication) {
    this.publication = publication;
  }


  public SaleProductOfferResponseV1 additionalMarketplaces(@javax.annotation.Nullable Map<String, AdditionalMarketplacesResponseValue> additionalMarketplaces) {
    this.additionalMarketplaces = additionalMarketplaces;
    return this;
  }

  public SaleProductOfferResponseV1 putAdditionalMarketplacesItem(String key, AdditionalMarketplacesResponseValue additionalMarketplacesItem) {
    if (this.additionalMarketplaces == null) {
      this.additionalMarketplaces = new HashMap<>();
    }
    this.additionalMarketplaces.put(key, additionalMarketplacesItem);
    return this;
  }

  /**
   * Selected information about the offer in each additional service. This field does not contain information about the base marketplace of the offer. You will find all available marketplaces here. Even if the seller does not want the offer to be visible in the additional service, we will return it in response.
   * @return additionalMarketplaces
   */
  @javax.annotation.Nullable
  public Map<String, AdditionalMarketplacesResponseValue> getAdditionalMarketplaces() {
    return additionalMarketplaces;
  }

  public void setAdditionalMarketplaces(@javax.annotation.Nullable Map<String, AdditionalMarketplacesResponseValue> additionalMarketplaces) {
    this.additionalMarketplaces = additionalMarketplaces;
  }


  public SaleProductOfferResponseV1 b2b(@javax.annotation.Nullable B2b b2b) {
    this.b2b = b2b;
    return this;
  }

  /**
   * Get b2b
   * @return b2b
   */
  @javax.annotation.Nullable
  public B2b getB2b() {
    return b2b;
  }

  public void setB2b(@javax.annotation.Nullable B2b b2b) {
    this.b2b = b2b;
  }


  public SaleProductOfferResponseV1 compatibilityList(@javax.annotation.Nullable CompatibilityListProductOfferResponse compatibilityList) {
    this.compatibilityList = compatibilityList;
    return this;
  }

  /**
   * Get compatibilityList
   * @return compatibilityList
   */
  @javax.annotation.Nullable
  public CompatibilityListProductOfferResponse getCompatibilityList() {
    return compatibilityList;
  }

  public void setCompatibilityList(@javax.annotation.Nullable CompatibilityListProductOfferResponse compatibilityList) {
    this.compatibilityList = compatibilityList;
  }


  public SaleProductOfferResponseV1 language(@javax.annotation.Nullable String language) {
    this.language = language;
    return this;
  }

  /**
   * Declared base language of the offer.
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(@javax.annotation.Nullable String language) {
    this.language = language;
  }


  public SaleProductOfferResponseV1 validation(@javax.annotation.Nullable Validation validation) {
    this.validation = validation;
    return this;
  }

  /**
   * Get validation
   * @return validation
   */
  @javax.annotation.Nullable
  public Validation getValidation() {
    return validation;
  }

  public void setValidation(@javax.annotation.Nullable Validation validation) {
    this.validation = validation;
  }


  public SaleProductOfferResponseV1 warnings(@javax.annotation.Nullable SaleProductOfferResponseV1AllOfWarnings warnings) {
    this.warnings = warnings;
    return this;
  }

  /**
   * Get warnings
   * @return warnings
   */
  @javax.annotation.Nullable
  public SaleProductOfferResponseV1AllOfWarnings getWarnings() {
    return warnings;
  }

  public void setWarnings(@javax.annotation.Nullable SaleProductOfferResponseV1AllOfWarnings warnings) {
    this.warnings = warnings;
  }


  public SaleProductOfferResponseV1 afterSalesServices(@javax.annotation.Nullable AfterSalesServices afterSalesServices) {
    this.afterSalesServices = afterSalesServices;
    return this;
  }

  /**
   * Get afterSalesServices
   * @return afterSalesServices
   */
  @javax.annotation.Nullable
  public AfterSalesServices getAfterSalesServices() {
    return afterSalesServices;
  }

  public void setAfterSalesServices(@javax.annotation.Nullable AfterSalesServices afterSalesServices) {
    this.afterSalesServices = afterSalesServices;
  }


  public SaleProductOfferResponseV1 discounts(@javax.annotation.Nullable DiscountsProductOfferResponse discounts) {
    this.discounts = discounts;
    return this;
  }

  /**
   * Get discounts
   * @return discounts
   */
  @javax.annotation.Nullable
  public DiscountsProductOfferResponse getDiscounts() {
    return discounts;
  }

  public void setDiscounts(@javax.annotation.Nullable DiscountsProductOfferResponse discounts) {
    this.discounts = discounts;
  }


  public SaleProductOfferResponseV1 stock(@javax.annotation.Nullable Stock stock) {
    this.stock = stock;
    return this;
  }

  /**
   * Get stock
   * @return stock
   */
  @javax.annotation.Nullable
  public Stock getStock() {
    return stock;
  }

  public void setStock(@javax.annotation.Nullable Stock stock) {
    this.stock = stock;
  }


  public SaleProductOfferResponseV1 parameters(@javax.annotation.Nullable List<ParameterProductOfferResponse> parameters) {
    this.parameters = parameters;
    return this;
  }

  public SaleProductOfferResponseV1 addParametersItem(ParameterProductOfferResponse parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * List of offer parameters.
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<ParameterProductOfferResponse> getParameters() {
    return parameters;
  }

  public void setParameters(@javax.annotation.Nullable List<ParameterProductOfferResponse> parameters) {
    this.parameters = parameters;
  }


  public SaleProductOfferResponseV1 contact(@javax.annotation.Nullable Contact contact) {
    this.contact = contact;
    return this;
  }

  /**
   * Identifier of contact data for sales format ADVERTISEMENT (classified ad); retrieve it via GET /sale/offer-contacts.
   * @return contact
   */
  @javax.annotation.Nullable
  public Contact getContact() {
    return contact;
  }

  public void setContact(@javax.annotation.Nullable Contact contact) {
    this.contact = contact;
  }


  public SaleProductOfferResponseV1 createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Creation date: Format (ISO 8601) - yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ. Cannot be modified.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public SaleProductOfferResponseV1 updatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Last update date: Format (ISO 8601) - yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ. Cannot be modified.
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleProductOfferResponseV1 saleProductOfferResponseV1 = (SaleProductOfferResponseV1) o;
    return Objects.equals(this.name, saleProductOfferResponseV1.name) &&
        Objects.equals(this.payments, saleProductOfferResponseV1.payments) &&
        Objects.equals(this.sellingMode, saleProductOfferResponseV1.sellingMode) &&
        Objects.equals(this.location, saleProductOfferResponseV1.location) &&
        Objects.equals(this.images, saleProductOfferResponseV1.images) &&
        Objects.equals(this.description, saleProductOfferResponseV1.description) &&
        Objects.equals(this.external, saleProductOfferResponseV1.external) &&
        Objects.equals(this.sizeTable, saleProductOfferResponseV1.sizeTable) &&
        Objects.equals(this.taxSettings, saleProductOfferResponseV1.taxSettings) &&
        Objects.equals(this.messageToSellerSettings, saleProductOfferResponseV1.messageToSellerSettings) &&
        Objects.equals(this.id, saleProductOfferResponseV1.id) &&
        Objects.equals(this.productSet, saleProductOfferResponseV1.productSet) &&
        Objects.equals(this.category, saleProductOfferResponseV1.category) &&
        Objects.equals(this.attachments, saleProductOfferResponseV1.attachments) &&
        Objects.equals(this.fundraisingCampaign, saleProductOfferResponseV1.fundraisingCampaign) &&
        Objects.equals(this.additionalServices, saleProductOfferResponseV1.additionalServices) &&
        Objects.equals(this.delivery, saleProductOfferResponseV1.delivery) &&
        Objects.equals(this.publication, saleProductOfferResponseV1.publication) &&
        Objects.equals(this.additionalMarketplaces, saleProductOfferResponseV1.additionalMarketplaces) &&
        Objects.equals(this.b2b, saleProductOfferResponseV1.b2b) &&
        Objects.equals(this.compatibilityList, saleProductOfferResponseV1.compatibilityList) &&
        Objects.equals(this.language, saleProductOfferResponseV1.language) &&
        Objects.equals(this.validation, saleProductOfferResponseV1.validation) &&
        Objects.equals(this.warnings, saleProductOfferResponseV1.warnings) &&
        Objects.equals(this.afterSalesServices, saleProductOfferResponseV1.afterSalesServices) &&
        Objects.equals(this.discounts, saleProductOfferResponseV1.discounts) &&
        Objects.equals(this.stock, saleProductOfferResponseV1.stock) &&
        Objects.equals(this.parameters, saleProductOfferResponseV1.parameters) &&
        Objects.equals(this.contact, saleProductOfferResponseV1.contact) &&
        Objects.equals(this.createdAt, saleProductOfferResponseV1.createdAt) &&
        Objects.equals(this.updatedAt, saleProductOfferResponseV1.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, payments, sellingMode, location, images, description, external, sizeTable, taxSettings, messageToSellerSettings, id, productSet, category, attachments, fundraisingCampaign, additionalServices, delivery, publication, additionalMarketplaces, b2b, compatibilityList, language, validation, warnings, afterSalesServices, discounts, stock, parameters, contact, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleProductOfferResponseV1 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    sellingMode: ").append(toIndentedString(sellingMode)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("    sizeTable: ").append(toIndentedString(sizeTable)).append("\n");
    sb.append("    taxSettings: ").append(toIndentedString(taxSettings)).append("\n");
    sb.append("    messageToSellerSettings: ").append(toIndentedString(messageToSellerSettings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productSet: ").append(toIndentedString(productSet)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    fundraisingCampaign: ").append(toIndentedString(fundraisingCampaign)).append("\n");
    sb.append("    additionalServices: ").append(toIndentedString(additionalServices)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("    publication: ").append(toIndentedString(publication)).append("\n");
    sb.append("    additionalMarketplaces: ").append(toIndentedString(additionalMarketplaces)).append("\n");
    sb.append("    b2b: ").append(toIndentedString(b2b)).append("\n");
    sb.append("    compatibilityList: ").append(toIndentedString(compatibilityList)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    validation: ").append(toIndentedString(validation)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    afterSalesServices: ").append(toIndentedString(afterSalesServices)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    stock: ").append(toIndentedString(stock)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("payments");
    openapiFields.add("sellingMode");
    openapiFields.add("location");
    openapiFields.add("images");
    openapiFields.add("description");
    openapiFields.add("external");
    openapiFields.add("sizeTable");
    openapiFields.add("taxSettings");
    openapiFields.add("messageToSellerSettings");
    openapiFields.add("id");
    openapiFields.add("productSet");
    openapiFields.add("category");
    openapiFields.add("attachments");
    openapiFields.add("fundraisingCampaign");
    openapiFields.add("additionalServices");
    openapiFields.add("delivery");
    openapiFields.add("publication");
    openapiFields.add("additionalMarketplaces");
    openapiFields.add("b2b");
    openapiFields.add("compatibilityList");
    openapiFields.add("language");
    openapiFields.add("validation");
    openapiFields.add("warnings");
    openapiFields.add("afterSalesServices");
    openapiFields.add("discounts");
    openapiFields.add("stock");
    openapiFields.add("parameters");
    openapiFields.add("contact");
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SaleProductOfferResponseV1
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SaleProductOfferResponseV1.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaleProductOfferResponseV1 is not found in the empty JSON string", SaleProductOfferResponseV1.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SaleProductOfferResponseV1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SaleProductOfferResponseV1` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `payments`
      if (jsonObj.get("payments") != null && !jsonObj.get("payments").isJsonNull()) {
        Payments.validateJsonElement(jsonObj.get("payments"));
      }
      // validate the optional field `sellingMode`
      if (jsonObj.get("sellingMode") != null && !jsonObj.get("sellingMode").isJsonNull()) {
        SellingMode.validateJsonElement(jsonObj.get("sellingMode"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        Location.validateJsonElement(jsonObj.get("location"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("images") != null && !jsonObj.get("images").isJsonNull() && !jsonObj.get("images").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `images` to be an array in the JSON string but got `%s`", jsonObj.get("images").toString()));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        StandardizedDescription.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `external`
      if (jsonObj.get("external") != null && !jsonObj.get("external").isJsonNull()) {
        ExternalId.validateJsonElement(jsonObj.get("external"));
      }
      // validate the optional field `sizeTable`
      if (jsonObj.get("sizeTable") != null && !jsonObj.get("sizeTable").isJsonNull()) {
        SizeTable.validateJsonElement(jsonObj.get("sizeTable"));
      }
      // validate the optional field `taxSettings`
      if (jsonObj.get("taxSettings") != null && !jsonObj.get("taxSettings").isJsonNull()) {
        OfferTaxSettings.validateJsonElement(jsonObj.get("taxSettings"));
      }
      // validate the optional field `messageToSellerSettings`
      if (jsonObj.get("messageToSellerSettings") != null && !jsonObj.get("messageToSellerSettings").isJsonNull()) {
        MessageToSellerSettings.validateJsonElement(jsonObj.get("messageToSellerSettings"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("productSet") != null && !jsonObj.get("productSet").isJsonNull()) {
        JsonArray jsonArrayproductSet = jsonObj.getAsJsonArray("productSet");
        if (jsonArrayproductSet != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productSet").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productSet` to be an array in the JSON string but got `%s`", jsonObj.get("productSet").toString()));
          }

          // validate the optional field `productSet` (array)
          for (int i = 0; i < jsonArrayproductSet.size(); i++) {
            SaleProductOfferResponseV1AllOfProductSet.validateJsonElement(jsonArrayproductSet.get(i));
          };
        }
      }
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        OfferCategory.validateJsonElement(jsonObj.get("category"));
      }
      if (jsonObj.get("attachments") != null && !jsonObj.get("attachments").isJsonNull()) {
        JsonArray jsonArrayattachments = jsonObj.getAsJsonArray("attachments");
        if (jsonArrayattachments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachments` to be an array in the JSON string but got `%s`", jsonObj.get("attachments").toString()));
          }

          // validate the optional field `attachments` (array)
          for (int i = 0; i < jsonArrayattachments.size(); i++) {
            ProductOfferAttachmentInner.validateJsonElement(jsonArrayattachments.get(i));
          };
        }
      }
      // validate the optional field `fundraisingCampaign`
      if (jsonObj.get("fundraisingCampaign") != null && !jsonObj.get("fundraisingCampaign").isJsonNull()) {
        ProductOfferFundraisingCampaignResponse.validateJsonElement(jsonObj.get("fundraisingCampaign"));
      }
      // validate the optional field `additionalServices`
      if (jsonObj.get("additionalServices") != null && !jsonObj.get("additionalServices").isJsonNull()) {
        ProductOfferAdditionalServicesResponse.validateJsonElement(jsonObj.get("additionalServices"));
      }
      // validate the optional field `delivery`
      if (jsonObj.get("delivery") != null && !jsonObj.get("delivery").isJsonNull()) {
        DeliveryProductOfferResponse.validateJsonElement(jsonObj.get("delivery"));
      }
      // validate the optional field `publication`
      if (jsonObj.get("publication") != null && !jsonObj.get("publication").isJsonNull()) {
        SaleProductOfferPublicationResponse.validateJsonElement(jsonObj.get("publication"));
      }
      // validate the optional field `b2b`
      if (jsonObj.get("b2b") != null && !jsonObj.get("b2b").isJsonNull()) {
        B2b.validateJsonElement(jsonObj.get("b2b"));
      }
      // validate the optional field `compatibilityList`
      if (jsonObj.get("compatibilityList") != null && !jsonObj.get("compatibilityList").isJsonNull()) {
        CompatibilityListProductOfferResponse.validateJsonElement(jsonObj.get("compatibilityList"));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      // validate the optional field `validation`
      if (jsonObj.get("validation") != null && !jsonObj.get("validation").isJsonNull()) {
        Validation.validateJsonElement(jsonObj.get("validation"));
      }
      // validate the optional field `warnings`
      if (jsonObj.get("warnings") != null && !jsonObj.get("warnings").isJsonNull()) {
        SaleProductOfferResponseV1AllOfWarnings.validateJsonElement(jsonObj.get("warnings"));
      }
      // validate the optional field `afterSalesServices`
      if (jsonObj.get("afterSalesServices") != null && !jsonObj.get("afterSalesServices").isJsonNull()) {
        AfterSalesServices.validateJsonElement(jsonObj.get("afterSalesServices"));
      }
      // validate the optional field `discounts`
      if (jsonObj.get("discounts") != null && !jsonObj.get("discounts").isJsonNull()) {
        DiscountsProductOfferResponse.validateJsonElement(jsonObj.get("discounts"));
      }
      // validate the optional field `stock`
      if (jsonObj.get("stock") != null && !jsonObj.get("stock").isJsonNull()) {
        Stock.validateJsonElement(jsonObj.get("stock"));
      }
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
        if (jsonArrayparameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
          }

          // validate the optional field `parameters` (array)
          for (int i = 0; i < jsonArrayparameters.size(); i++) {
            ParameterProductOfferResponse.validateJsonElement(jsonArrayparameters.get(i));
          };
        }
      }
      // validate the optional field `contact`
      if (jsonObj.get("contact") != null && !jsonObj.get("contact").isJsonNull()) {
        Contact.validateJsonElement(jsonObj.get("contact"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaleProductOfferResponseV1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaleProductOfferResponseV1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaleProductOfferResponseV1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaleProductOfferResponseV1.class));

       return (TypeAdapter<T>) new TypeAdapter<SaleProductOfferResponseV1>() {
           @Override
           public void write(JsonWriter out, SaleProductOfferResponseV1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SaleProductOfferResponseV1 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SaleProductOfferResponseV1 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SaleProductOfferResponseV1
   * @throws IOException if the JSON string is invalid with respect to SaleProductOfferResponseV1
   */
  public static SaleProductOfferResponseV1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaleProductOfferResponseV1.class);
  }

  /**
   * Convert an instance of SaleProductOfferResponseV1 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

