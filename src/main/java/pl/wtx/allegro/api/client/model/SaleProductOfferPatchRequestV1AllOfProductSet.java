/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.wtx.allegro.api.client.model.ProductOffer;
import pl.wtx.allegro.api.client.model.ProductSetElementQuantityQuantity;
import pl.wtx.allegro.api.client.model.ProductSetElementResponsiblePersonRequestResponsiblePerson;
import pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerRequest;
import pl.wtx.allegro.api.client.model.ProductSetElementSafetyInformation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * SaleProductOfferPatchRequestV1AllOfProductSet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class SaleProductOfferPatchRequestV1AllOfProductSet {
  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  @javax.annotation.Nullable
  private ProductOffer product;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  @javax.annotation.Nullable
  private ProductSetElementQuantityQuantity quantity;

  public static final String SERIALIZED_NAME_RESPONSIBLE_PERSON = "responsiblePerson";
  @SerializedName(SERIALIZED_NAME_RESPONSIBLE_PERSON)
  @javax.annotation.Nullable
  private ProductSetElementResponsiblePersonRequestResponsiblePerson responsiblePerson;

  public static final String SERIALIZED_NAME_RESPONSIBLE_PRODUCER = "responsibleProducer";
  @SerializedName(SERIALIZED_NAME_RESPONSIBLE_PRODUCER)
  @javax.annotation.Nullable
  private ProductSetElementResponsibleProducerRequest responsibleProducer;

  public static final String SERIALIZED_NAME_SAFETY_INFORMATION = "safetyInformation";
  @SerializedName(SERIALIZED_NAME_SAFETY_INFORMATION)
  @javax.annotation.Nullable
  private ProductSetElementSafetyInformation safetyInformation;

  public static final String SERIALIZED_NAME_MARKETED_BEFORE_G_P_S_R_OBLIGATION = "marketedBeforeGPSRObligation";
  @SerializedName(SERIALIZED_NAME_MARKETED_BEFORE_G_P_S_R_OBLIGATION)
  @javax.annotation.Nullable
  private Boolean marketedBeforeGPSRObligation;

  public SaleProductOfferPatchRequestV1AllOfProductSet() {
  }

  public SaleProductOfferPatchRequestV1AllOfProductSet product(@javax.annotation.Nullable ProductOffer product) {
    this.product = product;
    return this;
  }

  /**
   * You should enter the product identifier (UUID or EAN) or a complete product definition.
   * @return product
   */
  @javax.annotation.Nullable
  public ProductOffer getProduct() {
    return product;
  }

  public void setProduct(@javax.annotation.Nullable ProductOffer product) {
    this.product = product;
  }


  public SaleProductOfferPatchRequestV1AllOfProductSet quantity(@javax.annotation.Nullable ProductSetElementQuantityQuantity quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nullable
  public ProductSetElementQuantityQuantity getQuantity() {
    return quantity;
  }

  public void setQuantity(@javax.annotation.Nullable ProductSetElementQuantityQuantity quantity) {
    this.quantity = quantity;
  }


  public SaleProductOfferPatchRequestV1AllOfProductSet responsiblePerson(@javax.annotation.Nullable ProductSetElementResponsiblePersonRequestResponsiblePerson responsiblePerson) {
    this.responsiblePerson = responsiblePerson;
    return this;
  }

  /**
   * Get responsiblePerson
   * @return responsiblePerson
   */
  @javax.annotation.Nullable
  public ProductSetElementResponsiblePersonRequestResponsiblePerson getResponsiblePerson() {
    return responsiblePerson;
  }

  public void setResponsiblePerson(@javax.annotation.Nullable ProductSetElementResponsiblePersonRequestResponsiblePerson responsiblePerson) {
    this.responsiblePerson = responsiblePerson;
  }


  public SaleProductOfferPatchRequestV1AllOfProductSet responsibleProducer(@javax.annotation.Nullable ProductSetElementResponsibleProducerRequest responsibleProducer) {
    this.responsibleProducer = responsibleProducer;
    return this;
  }

  /**
   * Get responsibleProducer
   * @return responsibleProducer
   */
  @javax.annotation.Nullable
  public ProductSetElementResponsibleProducerRequest getResponsibleProducer() {
    return responsibleProducer;
  }

  public void setResponsibleProducer(@javax.annotation.Nullable ProductSetElementResponsibleProducerRequest responsibleProducer) {
    this.responsibleProducer = responsibleProducer;
  }


  public SaleProductOfferPatchRequestV1AllOfProductSet safetyInformation(@javax.annotation.Nullable ProductSetElementSafetyInformation safetyInformation) {
    this.safetyInformation = safetyInformation;
    return this;
  }

  /**
   * Get safetyInformation
   * @return safetyInformation
   */
  @javax.annotation.Nullable
  public ProductSetElementSafetyInformation getSafetyInformation() {
    return safetyInformation;
  }

  public void setSafetyInformation(@javax.annotation.Nullable ProductSetElementSafetyInformation safetyInformation) {
    this.safetyInformation = safetyInformation;
  }


  public SaleProductOfferPatchRequestV1AllOfProductSet marketedBeforeGPSRObligation(@javax.annotation.Nullable Boolean marketedBeforeGPSRObligation) {
    this.marketedBeforeGPSRObligation = marketedBeforeGPSRObligation;
    return this;
  }

  /**
   * Allows you to declare that the product was introduced before 13 Dec 2024 and therefore does not require GPSR data.
   * @return marketedBeforeGPSRObligation
   */
  @javax.annotation.Nullable
  public Boolean getMarketedBeforeGPSRObligation() {
    return marketedBeforeGPSRObligation;
  }

  public void setMarketedBeforeGPSRObligation(@javax.annotation.Nullable Boolean marketedBeforeGPSRObligation) {
    this.marketedBeforeGPSRObligation = marketedBeforeGPSRObligation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleProductOfferPatchRequestV1AllOfProductSet saleProductOfferPatchRequestV1AllOfProductSet = (SaleProductOfferPatchRequestV1AllOfProductSet) o;
    return Objects.equals(this.product, saleProductOfferPatchRequestV1AllOfProductSet.product) &&
        Objects.equals(this.quantity, saleProductOfferPatchRequestV1AllOfProductSet.quantity) &&
        Objects.equals(this.responsiblePerson, saleProductOfferPatchRequestV1AllOfProductSet.responsiblePerson) &&
        Objects.equals(this.responsibleProducer, saleProductOfferPatchRequestV1AllOfProductSet.responsibleProducer) &&
        Objects.equals(this.safetyInformation, saleProductOfferPatchRequestV1AllOfProductSet.safetyInformation) &&
        Objects.equals(this.marketedBeforeGPSRObligation, saleProductOfferPatchRequestV1AllOfProductSet.marketedBeforeGPSRObligation);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(product, quantity, responsiblePerson, responsibleProducer, safetyInformation, marketedBeforeGPSRObligation);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleProductOfferPatchRequestV1AllOfProductSet {\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    responsiblePerson: ").append(toIndentedString(responsiblePerson)).append("\n");
    sb.append("    responsibleProducer: ").append(toIndentedString(responsibleProducer)).append("\n");
    sb.append("    safetyInformation: ").append(toIndentedString(safetyInformation)).append("\n");
    sb.append("    marketedBeforeGPSRObligation: ").append(toIndentedString(marketedBeforeGPSRObligation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("product");
    openapiFields.add("quantity");
    openapiFields.add("responsiblePerson");
    openapiFields.add("responsibleProducer");
    openapiFields.add("safetyInformation");
    openapiFields.add("marketedBeforeGPSRObligation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SaleProductOfferPatchRequestV1AllOfProductSet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SaleProductOfferPatchRequestV1AllOfProductSet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaleProductOfferPatchRequestV1AllOfProductSet is not found in the empty JSON string", SaleProductOfferPatchRequestV1AllOfProductSet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SaleProductOfferPatchRequestV1AllOfProductSet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SaleProductOfferPatchRequestV1AllOfProductSet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        ProductOffer.validateJsonElement(jsonObj.get("product"));
      }
      // validate the optional field `quantity`
      if (jsonObj.get("quantity") != null && !jsonObj.get("quantity").isJsonNull()) {
        ProductSetElementQuantityQuantity.validateJsonElement(jsonObj.get("quantity"));
      }
      // validate the optional field `responsiblePerson`
      if (jsonObj.get("responsiblePerson") != null && !jsonObj.get("responsiblePerson").isJsonNull()) {
        ProductSetElementResponsiblePersonRequestResponsiblePerson.validateJsonElement(jsonObj.get("responsiblePerson"));
      }
      // validate the optional field `responsibleProducer`
      if (jsonObj.get("responsibleProducer") != null && !jsonObj.get("responsibleProducer").isJsonNull()) {
        ProductSetElementResponsibleProducerRequest.validateJsonElement(jsonObj.get("responsibleProducer"));
      }
      // validate the optional field `safetyInformation`
      if (jsonObj.get("safetyInformation") != null && !jsonObj.get("safetyInformation").isJsonNull()) {
        ProductSetElementSafetyInformation.validateJsonElement(jsonObj.get("safetyInformation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaleProductOfferPatchRequestV1AllOfProductSet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaleProductOfferPatchRequestV1AllOfProductSet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaleProductOfferPatchRequestV1AllOfProductSet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaleProductOfferPatchRequestV1AllOfProductSet.class));

       return (TypeAdapter<T>) new TypeAdapter<SaleProductOfferPatchRequestV1AllOfProductSet>() {
           @Override
           public void write(JsonWriter out, SaleProductOfferPatchRequestV1AllOfProductSet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SaleProductOfferPatchRequestV1AllOfProductSet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SaleProductOfferPatchRequestV1AllOfProductSet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SaleProductOfferPatchRequestV1AllOfProductSet
   * @throws IOException if the JSON string is invalid with respect to SaleProductOfferPatchRequestV1AllOfProductSet
   */
  public static SaleProductOfferPatchRequestV1AllOfProductSet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaleProductOfferPatchRequestV1AllOfProductSet.class);
  }

  /**
   * Convert an instance of SaleProductOfferPatchRequestV1AllOfProductSet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

