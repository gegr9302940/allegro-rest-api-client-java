/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import pl.wtx.allegro.api.client.model.CashOnDeliveryDto;
import pl.wtx.allegro.api.client.model.InsuranceDto;
import pl.wtx.allegro.api.client.model.PackageRequestDto;
import pl.wtx.allegro.api.client.model.ReceiverAddressDto;
import pl.wtx.allegro.api.client.model.SenderAddressDto;
import pl.wtx.allegro.api.client.model.ShipmentPickupAddressDto;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * ShipmentCreateRequestDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class ShipmentCreateRequestDto {
  public static final String SERIALIZED_NAME_DELIVERY_METHOD_ID = "deliveryMethodId";
  @SerializedName(SERIALIZED_NAME_DELIVERY_METHOD_ID)
  @javax.annotation.Nonnull
  private String deliveryMethodId;

  public static final String SERIALIZED_NAME_CREDENTIALS_ID = "credentialsId";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS_ID)
  @javax.annotation.Nullable
  private String credentialsId;

  public static final String SERIALIZED_NAME_SENDER = "sender";
  @SerializedName(SERIALIZED_NAME_SENDER)
  @javax.annotation.Nonnull
  private SenderAddressDto sender;

  public static final String SERIALIZED_NAME_RECEIVER = "receiver";
  @SerializedName(SERIALIZED_NAME_RECEIVER)
  @javax.annotation.Nonnull
  private ReceiverAddressDto receiver;

  public static final String SERIALIZED_NAME_PICKUP = "pickup";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PICKUP)
  @javax.annotation.Nullable
  private ShipmentPickupAddressDto pickup;

  public static final String SERIALIZED_NAME_REFERENCE_NUMBER = "referenceNumber";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NUMBER)
  @javax.annotation.Nullable
  private String referenceNumber;

  public static final String SERIALIZED_NAME_PACKAGES = "packages";
  @SerializedName(SERIALIZED_NAME_PACKAGES)
  @javax.annotation.Nonnull
  private List<PackageRequestDto> packages = new ArrayList<>();

  public static final String SERIALIZED_NAME_INSURANCE = "insurance";
  @SerializedName(SERIALIZED_NAME_INSURANCE)
  @javax.annotation.Nullable
  private InsuranceDto insurance;

  public static final String SERIALIZED_NAME_CASH_ON_DELIVERY = "cashOnDelivery";
  @SerializedName(SERIALIZED_NAME_CASH_ON_DELIVERY)
  @javax.annotation.Nullable
  private CashOnDeliveryDto cashOnDelivery;

  /**
   * Label file format.
   */
  @JsonAdapter(LabelFormatEnum.Adapter.class)
  public enum LabelFormatEnum {
    PDF("PDF"),
    
    ZPL("ZPL");

    private String value;

    LabelFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LabelFormatEnum fromValue(String value) {
      for (LabelFormatEnum b : LabelFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LabelFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LabelFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LabelFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LabelFormatEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LabelFormatEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LABEL_FORMAT = "labelFormat";
  @SerializedName(SERIALIZED_NAME_LABEL_FORMAT)
  @javax.annotation.Nullable
  private LabelFormatEnum labelFormat;

  public static final String SERIALIZED_NAME_ADDITIONAL_SERVICES = "additionalServices";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SERVICES)
  @javax.annotation.Nullable
  private List<String> additionalServices = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDITIONAL_PROPERTIES = "additionalProperties";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_PROPERTIES)
  @javax.annotation.Nullable
  private Map<String, String> additionalProperties = new HashMap<>();

  public ShipmentCreateRequestDto() {
  }

  public ShipmentCreateRequestDto deliveryMethodId(@javax.annotation.Nonnull String deliveryMethodId) {
    this.deliveryMethodId = deliveryMethodId;
    return this;
  }

  /**
   * Id of delivery method, chosen by buyer in order.
   * @return deliveryMethodId
   */
  @javax.annotation.Nonnull
  public String getDeliveryMethodId() {
    return deliveryMethodId;
  }

  public void setDeliveryMethodId(@javax.annotation.Nonnull String deliveryMethodId) {
    this.deliveryMethodId = deliveryMethodId;
  }


  public ShipmentCreateRequestDto credentialsId(@javax.annotation.Nullable String credentialsId) {
    this.credentialsId = credentialsId;
    return this;
  }

  /**
   * ID of merchant agreement, registered in WZA. Value should be read from /shipment-management/delivery-services. For Allegro Standard methods, this field should be null.
   * @return credentialsId
   */
  @javax.annotation.Nullable
  public String getCredentialsId() {
    return credentialsId;
  }

  public void setCredentialsId(@javax.annotation.Nullable String credentialsId) {
    this.credentialsId = credentialsId;
  }


  public ShipmentCreateRequestDto sender(@javax.annotation.Nonnull SenderAddressDto sender) {
    this.sender = sender;
    return this;
  }

  /**
   * Get sender
   * @return sender
   */
  @javax.annotation.Nonnull
  public SenderAddressDto getSender() {
    return sender;
  }

  public void setSender(@javax.annotation.Nonnull SenderAddressDto sender) {
    this.sender = sender;
  }


  public ShipmentCreateRequestDto receiver(@javax.annotation.Nonnull ReceiverAddressDto receiver) {
    this.receiver = receiver;
    return this;
  }

  /**
   * Get receiver
   * @return receiver
   */
  @javax.annotation.Nonnull
  public ReceiverAddressDto getReceiver() {
    return receiver;
  }

  public void setReceiver(@javax.annotation.Nonnull ReceiverAddressDto receiver) {
    this.receiver = receiver;
  }


  @Deprecated
  public ShipmentCreateRequestDto pickup(@javax.annotation.Nullable ShipmentPickupAddressDto pickup) {
    this.pickup = pickup;
    return this;
  }

  /**
   * Get pickup
   * @return pickup
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public ShipmentPickupAddressDto getPickup() {
    return pickup;
  }

  @Deprecated
  public void setPickup(@javax.annotation.Nullable ShipmentPickupAddressDto pickup) {
    this.pickup = pickup;
  }


  public ShipmentCreateRequestDto referenceNumber(@javax.annotation.Nullable String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

  /**
   * Shipment identifier in own system. Example: &#x60;Ordering number&#x60;.
   * @return referenceNumber
   */
  @javax.annotation.Nullable
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(@javax.annotation.Nullable String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }


  public ShipmentCreateRequestDto packages(@javax.annotation.Nonnull List<PackageRequestDto> packages) {
    this.packages = packages;
    return this;
  }

  public ShipmentCreateRequestDto addPackagesItem(PackageRequestDto packagesItem) {
    if (this.packages == null) {
      this.packages = new ArrayList<>();
    }
    this.packages.add(packagesItem);
    return this;
  }

  /**
   * Get packages
   * @return packages
   */
  @javax.annotation.Nonnull
  public List<PackageRequestDto> getPackages() {
    return packages;
  }

  public void setPackages(@javax.annotation.Nonnull List<PackageRequestDto> packages) {
    this.packages = packages;
  }


  public ShipmentCreateRequestDto insurance(@javax.annotation.Nullable InsuranceDto insurance) {
    this.insurance = insurance;
    return this;
  }

  /**
   * Get insurance
   * @return insurance
   */
  @javax.annotation.Nullable
  public InsuranceDto getInsurance() {
    return insurance;
  }

  public void setInsurance(@javax.annotation.Nullable InsuranceDto insurance) {
    this.insurance = insurance;
  }


  public ShipmentCreateRequestDto cashOnDelivery(@javax.annotation.Nullable CashOnDeliveryDto cashOnDelivery) {
    this.cashOnDelivery = cashOnDelivery;
    return this;
  }

  /**
   * Get cashOnDelivery
   * @return cashOnDelivery
   */
  @javax.annotation.Nullable
  public CashOnDeliveryDto getCashOnDelivery() {
    return cashOnDelivery;
  }

  public void setCashOnDelivery(@javax.annotation.Nullable CashOnDeliveryDto cashOnDelivery) {
    this.cashOnDelivery = cashOnDelivery;
  }


  public ShipmentCreateRequestDto labelFormat(@javax.annotation.Nullable LabelFormatEnum labelFormat) {
    this.labelFormat = labelFormat;
    return this;
  }

  /**
   * Label file format.
   * @return labelFormat
   */
  @javax.annotation.Nullable
  public LabelFormatEnum getLabelFormat() {
    return labelFormat;
  }

  public void setLabelFormat(@javax.annotation.Nullable LabelFormatEnum labelFormat) {
    this.labelFormat = labelFormat;
  }


  public ShipmentCreateRequestDto additionalServices(@javax.annotation.Nullable List<String> additionalServices) {
    this.additionalServices = additionalServices;
    return this;
  }

  public ShipmentCreateRequestDto addAdditionalServicesItem(String additionalServicesItem) {
    if (this.additionalServices == null) {
      this.additionalServices = new ArrayList<>();
    }
    this.additionalServices.add(additionalServicesItem);
    return this;
  }

  /**
   * List of additional services.
   * @return additionalServices
   */
  @javax.annotation.Nullable
  public List<String> getAdditionalServices() {
    return additionalServices;
  }

  public void setAdditionalServices(@javax.annotation.Nullable List<String> additionalServices) {
    this.additionalServices = additionalServices;
  }


  public ShipmentCreateRequestDto additionalProperties(@javax.annotation.Nullable Map<String, String> additionalProperties) {
    this.additionalProperties = additionalProperties;
    return this;
  }

  public ShipmentCreateRequestDto putAdditionalPropertiesItem(String key, String additionalPropertiesItem) {
    if (this.additionalProperties == null) {
      this.additionalProperties = new HashMap<>();
    }
    this.additionalProperties.put(key, additionalPropertiesItem);
    return this;
  }

  /**
   * Key-Value map defining non-standard, carrier specific features. List of the supported properties is located as sub-resource in /shipment-management/delivery-services.
   * @return additionalProperties
   */
  @javax.annotation.Nullable
  public Map<String, String> getAdditionalProperties() {
    return additionalProperties;
  }

  public void setAdditionalProperties(@javax.annotation.Nullable Map<String, String> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentCreateRequestDto shipmentCreateRequestDto = (ShipmentCreateRequestDto) o;
    return Objects.equals(this.deliveryMethodId, shipmentCreateRequestDto.deliveryMethodId) &&
        Objects.equals(this.credentialsId, shipmentCreateRequestDto.credentialsId) &&
        Objects.equals(this.sender, shipmentCreateRequestDto.sender) &&
        Objects.equals(this.receiver, shipmentCreateRequestDto.receiver) &&
        Objects.equals(this.pickup, shipmentCreateRequestDto.pickup) &&
        Objects.equals(this.referenceNumber, shipmentCreateRequestDto.referenceNumber) &&
        Objects.equals(this.packages, shipmentCreateRequestDto.packages) &&
        Objects.equals(this.insurance, shipmentCreateRequestDto.insurance) &&
        Objects.equals(this.cashOnDelivery, shipmentCreateRequestDto.cashOnDelivery) &&
        Objects.equals(this.labelFormat, shipmentCreateRequestDto.labelFormat) &&
        Objects.equals(this.additionalServices, shipmentCreateRequestDto.additionalServices) &&
        Objects.equals(this.additionalProperties, shipmentCreateRequestDto.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryMethodId, credentialsId, sender, receiver, pickup, referenceNumber, packages, insurance, cashOnDelivery, labelFormat, additionalServices, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentCreateRequestDto {\n");
    sb.append("    deliveryMethodId: ").append(toIndentedString(deliveryMethodId)).append("\n");
    sb.append("    credentialsId: ").append(toIndentedString(credentialsId)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    receiver: ").append(toIndentedString(receiver)).append("\n");
    sb.append("    pickup: ").append(toIndentedString(pickup)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
    sb.append("    insurance: ").append(toIndentedString(insurance)).append("\n");
    sb.append("    cashOnDelivery: ").append(toIndentedString(cashOnDelivery)).append("\n");
    sb.append("    labelFormat: ").append(toIndentedString(labelFormat)).append("\n");
    sb.append("    additionalServices: ").append(toIndentedString(additionalServices)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deliveryMethodId");
    openapiFields.add("credentialsId");
    openapiFields.add("sender");
    openapiFields.add("receiver");
    openapiFields.add("pickup");
    openapiFields.add("referenceNumber");
    openapiFields.add("packages");
    openapiFields.add("insurance");
    openapiFields.add("cashOnDelivery");
    openapiFields.add("labelFormat");
    openapiFields.add("additionalServices");
    openapiFields.add("additionalProperties");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("deliveryMethodId");
    openapiRequiredFields.add("sender");
    openapiRequiredFields.add("receiver");
    openapiRequiredFields.add("packages");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ShipmentCreateRequestDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ShipmentCreateRequestDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShipmentCreateRequestDto is not found in the empty JSON string", ShipmentCreateRequestDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ShipmentCreateRequestDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShipmentCreateRequestDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ShipmentCreateRequestDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("deliveryMethodId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryMethodId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryMethodId").toString()));
      }
      if ((jsonObj.get("credentialsId") != null && !jsonObj.get("credentialsId").isJsonNull()) && !jsonObj.get("credentialsId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credentialsId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credentialsId").toString()));
      }
      // validate the required field `sender`
      SenderAddressDto.validateJsonElement(jsonObj.get("sender"));
      // validate the required field `receiver`
      ReceiverAddressDto.validateJsonElement(jsonObj.get("receiver"));
      // validate the optional field `pickup`
      if (jsonObj.get("pickup") != null && !jsonObj.get("pickup").isJsonNull()) {
        ShipmentPickupAddressDto.validateJsonElement(jsonObj.get("pickup"));
      }
      if ((jsonObj.get("referenceNumber") != null && !jsonObj.get("referenceNumber").isJsonNull()) && !jsonObj.get("referenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referenceNumber").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("packages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `packages` to be an array in the JSON string but got `%s`", jsonObj.get("packages").toString()));
      }

      JsonArray jsonArraypackages = jsonObj.getAsJsonArray("packages");
      // validate the required field `packages` (array)
      for (int i = 0; i < jsonArraypackages.size(); i++) {
        PackageRequestDto.validateJsonElement(jsonArraypackages.get(i));
      };
      // validate the optional field `insurance`
      if (jsonObj.get("insurance") != null && !jsonObj.get("insurance").isJsonNull()) {
        InsuranceDto.validateJsonElement(jsonObj.get("insurance"));
      }
      // validate the optional field `cashOnDelivery`
      if (jsonObj.get("cashOnDelivery") != null && !jsonObj.get("cashOnDelivery").isJsonNull()) {
        CashOnDeliveryDto.validateJsonElement(jsonObj.get("cashOnDelivery"));
      }
      if ((jsonObj.get("labelFormat") != null && !jsonObj.get("labelFormat").isJsonNull()) && !jsonObj.get("labelFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labelFormat").toString()));
      }
      // validate the optional field `labelFormat`
      if (jsonObj.get("labelFormat") != null && !jsonObj.get("labelFormat").isJsonNull()) {
        LabelFormatEnum.validateJsonElement(jsonObj.get("labelFormat"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("additionalServices") != null && !jsonObj.get("additionalServices").isJsonNull() && !jsonObj.get("additionalServices").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalServices` to be an array in the JSON string but got `%s`", jsonObj.get("additionalServices").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShipmentCreateRequestDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShipmentCreateRequestDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShipmentCreateRequestDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShipmentCreateRequestDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ShipmentCreateRequestDto>() {
           @Override
           public void write(JsonWriter out, ShipmentCreateRequestDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShipmentCreateRequestDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ShipmentCreateRequestDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ShipmentCreateRequestDto
   * @throws IOException if the JSON string is invalid with respect to ShipmentCreateRequestDto
   */
  public static ShipmentCreateRequestDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShipmentCreateRequestDto.class);
  }

  /**
   * Convert an instance of ShipmentCreateRequestDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

