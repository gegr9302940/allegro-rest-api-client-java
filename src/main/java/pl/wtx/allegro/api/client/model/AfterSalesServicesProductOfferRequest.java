/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import pl.wtx.allegro.api.client.model.AfterSalesServicesProductOfferRequestImpliedWarranty;
import pl.wtx.allegro.api.client.model.AfterSalesServicesProductOfferRequestReturnPolicy;
import pl.wtx.allegro.api.client.model.AfterSalesServicesProductOfferRequestWarranty;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * The definitions of the different after sales services assigned to the offer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class AfterSalesServicesProductOfferRequest {
  public static final String SERIALIZED_NAME_IMPLIED_WARRANTY = "impliedWarranty";
  @SerializedName(SERIALIZED_NAME_IMPLIED_WARRANTY)
  @javax.annotation.Nullable
  private AfterSalesServicesProductOfferRequestImpliedWarranty impliedWarranty;

  public static final String SERIALIZED_NAME_RETURN_POLICY = "returnPolicy";
  @SerializedName(SERIALIZED_NAME_RETURN_POLICY)
  @javax.annotation.Nullable
  private AfterSalesServicesProductOfferRequestReturnPolicy returnPolicy;

  public static final String SERIALIZED_NAME_WARRANTY = "warranty";
  @SerializedName(SERIALIZED_NAME_WARRANTY)
  @javax.annotation.Nullable
  private AfterSalesServicesProductOfferRequestWarranty warranty;

  public AfterSalesServicesProductOfferRequest() {
  }

  public AfterSalesServicesProductOfferRequest impliedWarranty(@javax.annotation.Nullable AfterSalesServicesProductOfferRequestImpliedWarranty impliedWarranty) {
    this.impliedWarranty = impliedWarranty;
    return this;
  }

  /**
   * Get impliedWarranty
   * @return impliedWarranty
   */
  @javax.annotation.Nullable
  public AfterSalesServicesProductOfferRequestImpliedWarranty getImpliedWarranty() {
    return impliedWarranty;
  }

  public void setImpliedWarranty(@javax.annotation.Nullable AfterSalesServicesProductOfferRequestImpliedWarranty impliedWarranty) {
    this.impliedWarranty = impliedWarranty;
  }


  public AfterSalesServicesProductOfferRequest returnPolicy(@javax.annotation.Nullable AfterSalesServicesProductOfferRequestReturnPolicy returnPolicy) {
    this.returnPolicy = returnPolicy;
    return this;
  }

  /**
   * Get returnPolicy
   * @return returnPolicy
   */
  @javax.annotation.Nullable
  public AfterSalesServicesProductOfferRequestReturnPolicy getReturnPolicy() {
    return returnPolicy;
  }

  public void setReturnPolicy(@javax.annotation.Nullable AfterSalesServicesProductOfferRequestReturnPolicy returnPolicy) {
    this.returnPolicy = returnPolicy;
  }


  public AfterSalesServicesProductOfferRequest warranty(@javax.annotation.Nullable AfterSalesServicesProductOfferRequestWarranty warranty) {
    this.warranty = warranty;
    return this;
  }

  /**
   * Get warranty
   * @return warranty
   */
  @javax.annotation.Nullable
  public AfterSalesServicesProductOfferRequestWarranty getWarranty() {
    return warranty;
  }

  public void setWarranty(@javax.annotation.Nullable AfterSalesServicesProductOfferRequestWarranty warranty) {
    this.warranty = warranty;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AfterSalesServicesProductOfferRequest afterSalesServicesProductOfferRequest = (AfterSalesServicesProductOfferRequest) o;
    return Objects.equals(this.impliedWarranty, afterSalesServicesProductOfferRequest.impliedWarranty) &&
        Objects.equals(this.returnPolicy, afterSalesServicesProductOfferRequest.returnPolicy) &&
        Objects.equals(this.warranty, afterSalesServicesProductOfferRequest.warranty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(impliedWarranty, returnPolicy, warranty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AfterSalesServicesProductOfferRequest {\n");
    sb.append("    impliedWarranty: ").append(toIndentedString(impliedWarranty)).append("\n");
    sb.append("    returnPolicy: ").append(toIndentedString(returnPolicy)).append("\n");
    sb.append("    warranty: ").append(toIndentedString(warranty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("impliedWarranty");
    openapiFields.add("returnPolicy");
    openapiFields.add("warranty");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AfterSalesServicesProductOfferRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AfterSalesServicesProductOfferRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AfterSalesServicesProductOfferRequest is not found in the empty JSON string", AfterSalesServicesProductOfferRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AfterSalesServicesProductOfferRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AfterSalesServicesProductOfferRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `impliedWarranty`
      if (jsonObj.get("impliedWarranty") != null && !jsonObj.get("impliedWarranty").isJsonNull()) {
        AfterSalesServicesProductOfferRequestImpliedWarranty.validateJsonElement(jsonObj.get("impliedWarranty"));
      }
      // validate the optional field `returnPolicy`
      if (jsonObj.get("returnPolicy") != null && !jsonObj.get("returnPolicy").isJsonNull()) {
        AfterSalesServicesProductOfferRequestReturnPolicy.validateJsonElement(jsonObj.get("returnPolicy"));
      }
      // validate the optional field `warranty`
      if (jsonObj.get("warranty") != null && !jsonObj.get("warranty").isJsonNull()) {
        AfterSalesServicesProductOfferRequestWarranty.validateJsonElement(jsonObj.get("warranty"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AfterSalesServicesProductOfferRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AfterSalesServicesProductOfferRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AfterSalesServicesProductOfferRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AfterSalesServicesProductOfferRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AfterSalesServicesProductOfferRequest>() {
           @Override
           public void write(JsonWriter out, AfterSalesServicesProductOfferRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AfterSalesServicesProductOfferRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AfterSalesServicesProductOfferRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AfterSalesServicesProductOfferRequest
   * @throws IOException if the JSON string is invalid with respect to AfterSalesServicesProductOfferRequest
   */
  public static AfterSalesServicesProductOfferRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AfterSalesServicesProductOfferRequest.class);
  }

  /**
   * Convert an instance of AfterSalesServicesProductOfferRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

