/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client;

import pl.wtx.allegro.api.client.invoker.ApiCallback;
import pl.wtx.allegro.api.client.invoker.ApiClient;
import pl.wtx.allegro.api.client.invoker.ApiException;
import pl.wtx.allegro.api.client.invoker.ApiResponse;
import pl.wtx.allegro.api.client.invoker.Configuration;
import pl.wtx.allegro.api.client.invoker.Pair;
import pl.wtx.allegro.api.client.invoker.ProgressRequestBody;
import pl.wtx.allegro.api.client.invoker.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import pl.wtx.allegro.api.client.model.AuthError;
import pl.wtx.allegro.api.client.model.DeliverySettingsRequest;
import pl.wtx.allegro.api.client.model.DeliverySettingsResponse;
import pl.wtx.allegro.api.client.model.ErrorsHolder;
import pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200Response;
import pl.wtx.allegro.api.client.model.GetListOfShippingRatestUsingGET200Response;
import pl.wtx.allegro.api.client.model.ShippingRatesSet;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DeliveryApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DeliveryApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DeliveryApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createShippingRatesSetUsingPOST
     * @param shippingRatesSet Shipping rates set (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The user has reached the limit of shipping rates sets. Information on the limit will be returned in the error message. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createShippingRatesSetUsingPOSTCall(@javax.annotation.Nonnull ShippingRatesSet shippingRatesSet, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = shippingRatesSet;

        // create path and map variables
        String localVarPath = "/sale/shipping-rates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer-token-for-user" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createShippingRatesSetUsingPOSTValidateBeforeCall(@javax.annotation.Nonnull ShippingRatesSet shippingRatesSet, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'shippingRatesSet' is set
        if (shippingRatesSet == null) {
            throw new ApiException("Missing the required parameter 'shippingRatesSet' when calling createShippingRatesSetUsingPOST(Async)");
        }

        return createShippingRatesSetUsingPOSTCall(shippingRatesSet, _callback);

    }

    /**
     * Create a new shipping rates set
     * Use this resource to create a new seller&#39;s shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-dodac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-add-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param shippingRatesSet Shipping rates set (required)
     * @return ShippingRatesSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The user has reached the limit of shipping rates sets. Information on the limit will be returned in the error message. </td><td>  -  </td></tr>
     </table>
     */
    public ShippingRatesSet createShippingRatesSetUsingPOST(@javax.annotation.Nonnull ShippingRatesSet shippingRatesSet) throws ApiException {
        ApiResponse<ShippingRatesSet> localVarResp = createShippingRatesSetUsingPOSTWithHttpInfo(shippingRatesSet);
        return localVarResp.getData();
    }

    /**
     * Create a new shipping rates set
     * Use this resource to create a new seller&#39;s shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-dodac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-add-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param shippingRatesSet Shipping rates set (required)
     * @return ApiResponse&lt;ShippingRatesSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The user has reached the limit of shipping rates sets. Information on the limit will be returned in the error message. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ShippingRatesSet> createShippingRatesSetUsingPOSTWithHttpInfo(@javax.annotation.Nonnull ShippingRatesSet shippingRatesSet) throws ApiException {
        okhttp3.Call localVarCall = createShippingRatesSetUsingPOSTValidateBeforeCall(shippingRatesSet, null);
        Type localVarReturnType = new TypeToken<ShippingRatesSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a new shipping rates set (asynchronously)
     * Use this resource to create a new seller&#39;s shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-dodac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-add-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param shippingRatesSet Shipping rates set (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The user has reached the limit of shipping rates sets. Information on the limit will be returned in the error message. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createShippingRatesSetUsingPOSTAsync(@javax.annotation.Nonnull ShippingRatesSet shippingRatesSet, final ApiCallback<ShippingRatesSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = createShippingRatesSetUsingPOSTValidateBeforeCall(shippingRatesSet, _callback);
        Type localVarReturnType = new TypeToken<ShippingRatesSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getListOfDeliveryMethodsUsingGET
     * @param marketplace Allows to filter delivery methods by marketplace id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getListOfDeliveryMethodsUsingGETCall(@javax.annotation.Nullable String marketplace, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sale/delivery-methods";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (marketplace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marketplace", marketplace));
        }

        final String[] localVarAccepts = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer-token-for-user", "bearer-token-for-application" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getListOfDeliveryMethodsUsingGETValidateBeforeCall(@javax.annotation.Nullable String marketplace, final ApiCallback _callback) throws ApiException {
        return getListOfDeliveryMethodsUsingGETCall(marketplace, _callback);

    }

    /**
     * Get the list of delivery methods
     * Use this resource to get a list of all delivery methods currently available on the platform, as well as those that have already been discontinued. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-dodac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-add-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplace Allows to filter delivery methods by marketplace id. (optional)
     * @return GetListOfDeliveryMethodsUsingGET200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
     </table>
     */
    public GetListOfDeliveryMethodsUsingGET200Response getListOfDeliveryMethodsUsingGET(@javax.annotation.Nullable String marketplace) throws ApiException {
        ApiResponse<GetListOfDeliveryMethodsUsingGET200Response> localVarResp = getListOfDeliveryMethodsUsingGETWithHttpInfo(marketplace);
        return localVarResp.getData();
    }

    /**
     * Get the list of delivery methods
     * Use this resource to get a list of all delivery methods currently available on the platform, as well as those that have already been discontinued. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-dodac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-add-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplace Allows to filter delivery methods by marketplace id. (optional)
     * @return ApiResponse&lt;GetListOfDeliveryMethodsUsingGET200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetListOfDeliveryMethodsUsingGET200Response> getListOfDeliveryMethodsUsingGETWithHttpInfo(@javax.annotation.Nullable String marketplace) throws ApiException {
        okhttp3.Call localVarCall = getListOfDeliveryMethodsUsingGETValidateBeforeCall(marketplace, null);
        Type localVarReturnType = new TypeToken<GetListOfDeliveryMethodsUsingGET200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the list of delivery methods (asynchronously)
     * Use this resource to get a list of all delivery methods currently available on the platform, as well as those that have already been discontinued. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-dodac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-add-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplace Allows to filter delivery methods by marketplace id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getListOfDeliveryMethodsUsingGETAsync(@javax.annotation.Nullable String marketplace, final ApiCallback<GetListOfDeliveryMethodsUsingGET200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getListOfDeliveryMethodsUsingGETValidateBeforeCall(marketplace, _callback);
        Type localVarReturnType = new TypeToken<GetListOfDeliveryMethodsUsingGET200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getListOfShippingRatestUsingGET
     * @param marketplace Allows to filter shipping rates by marketplace that they are qualified for. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getListOfShippingRatestUsingGETCall(@javax.annotation.Nullable String marketplace, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sale/shipping-rates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (marketplace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marketplace", marketplace));
        }

        final String[] localVarAccepts = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer-token-for-user" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getListOfShippingRatestUsingGETValidateBeforeCall(@javax.annotation.Nullable String marketplace, final ApiCallback _callback) throws ApiException {
        return getListOfShippingRatestUsingGETCall(marketplace, _callback);

    }

    /**
     * Get the user&#39;s shipping rates
     * Use this resource to get a list of seller&#39;s shipping rates. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-retrieve-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplace Allows to filter shipping rates by marketplace that they are qualified for. (optional)
     * @return GetListOfShippingRatestUsingGET200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
     </table>
     */
    public GetListOfShippingRatestUsingGET200Response getListOfShippingRatestUsingGET(@javax.annotation.Nullable String marketplace) throws ApiException {
        ApiResponse<GetListOfShippingRatestUsingGET200Response> localVarResp = getListOfShippingRatestUsingGETWithHttpInfo(marketplace);
        return localVarResp.getData();
    }

    /**
     * Get the user&#39;s shipping rates
     * Use this resource to get a list of seller&#39;s shipping rates. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-retrieve-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplace Allows to filter shipping rates by marketplace that they are qualified for. (optional)
     * @return ApiResponse&lt;GetListOfShippingRatestUsingGET200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetListOfShippingRatestUsingGET200Response> getListOfShippingRatestUsingGETWithHttpInfo(@javax.annotation.Nullable String marketplace) throws ApiException {
        okhttp3.Call localVarCall = getListOfShippingRatestUsingGETValidateBeforeCall(marketplace, null);
        Type localVarReturnType = new TypeToken<GetListOfShippingRatestUsingGET200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the user&#39;s shipping rates (asynchronously)
     * Use this resource to get a list of seller&#39;s shipping rates. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-retrieve-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplace Allows to filter shipping rates by marketplace that they are qualified for. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getListOfShippingRatestUsingGETAsync(@javax.annotation.Nullable String marketplace, final ApiCallback<GetListOfShippingRatestUsingGET200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getListOfShippingRatestUsingGETValidateBeforeCall(marketplace, _callback);
        Type localVarReturnType = new TypeToken<GetListOfShippingRatestUsingGET200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getSaleDeliverySettings
     * @param marketplaceId Marketplace for which delivery settings will be returned. By default (if the marketplace parameter is not set) the marketplace on which the seller has registered is used. However, we recommend that the marketplace.id query parameter should always be explicitly set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - not supported marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSaleDeliverySettingsCall(@javax.annotation.Nullable String marketplaceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sale/delivery-settings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (marketplaceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marketplace.id", marketplaceId));
        }

        final String[] localVarAccepts = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer-token-for-user" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSaleDeliverySettingsValidateBeforeCall(@javax.annotation.Nullable String marketplaceId, final ApiCallback _callback) throws ApiException {
        return getSaleDeliverySettingsCall(marketplaceId, _callback);

    }

    /**
     * Get the user&#39;s delivery settings
     * Use this resource to get the delivery settings declared by the seller. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-ustawienia-dostawy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-get-delivery-settings\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplaceId Marketplace for which delivery settings will be returned. By default (if the marketplace parameter is not set) the marketplace on which the seller has registered is used. However, we recommend that the marketplace.id query parameter should always be explicitly set. (optional)
     * @return DeliverySettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - not supported marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public DeliverySettingsResponse getSaleDeliverySettings(@javax.annotation.Nullable String marketplaceId) throws ApiException {
        ApiResponse<DeliverySettingsResponse> localVarResp = getSaleDeliverySettingsWithHttpInfo(marketplaceId);
        return localVarResp.getData();
    }

    /**
     * Get the user&#39;s delivery settings
     * Use this resource to get the delivery settings declared by the seller. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-ustawienia-dostawy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-get-delivery-settings\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplaceId Marketplace for which delivery settings will be returned. By default (if the marketplace parameter is not set) the marketplace on which the seller has registered is used. However, we recommend that the marketplace.id query parameter should always be explicitly set. (optional)
     * @return ApiResponse&lt;DeliverySettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - not supported marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DeliverySettingsResponse> getSaleDeliverySettingsWithHttpInfo(@javax.annotation.Nullable String marketplaceId) throws ApiException {
        okhttp3.Call localVarCall = getSaleDeliverySettingsValidateBeforeCall(marketplaceId, null);
        Type localVarReturnType = new TypeToken<DeliverySettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the user&#39;s delivery settings (asynchronously)
     * Use this resource to get the delivery settings declared by the seller. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-ustawienia-dostawy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-get-delivery-settings\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param marketplaceId Marketplace for which delivery settings will be returned. By default (if the marketplace parameter is not set) the marketplace on which the seller has registered is used. However, we recommend that the marketplace.id query parameter should always be explicitly set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - not supported marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSaleDeliverySettingsAsync(@javax.annotation.Nullable String marketplaceId, final ApiCallback<DeliverySettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSaleDeliverySettingsValidateBeforeCall(marketplaceId, _callback);
        Type localVarReturnType = new TypeToken<DeliverySettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getShippingRatesSetUsingGET
     * @param id Shipping rates set identifier. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Shipping rates set with given ID not found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getShippingRatesSetUsingGETCall(@javax.annotation.Nonnull String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sale/shipping-rates/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer-token-for-user" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getShippingRatesSetUsingGETValidateBeforeCall(@javax.annotation.Nonnull String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getShippingRatesSetUsingGET(Async)");
        }

        return getShippingRatesSetUsingGETCall(id, _callback);

    }

    /**
     * Get the details of a shipping rates set
     * Use this resource to get details of the given shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-retrieve-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param id Shipping rates set identifier. (required)
     * @return ShippingRatesSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Shipping rates set with given ID not found </td><td>  -  </td></tr>
     </table>
     */
    public ShippingRatesSet getShippingRatesSetUsingGET(@javax.annotation.Nonnull String id) throws ApiException {
        ApiResponse<ShippingRatesSet> localVarResp = getShippingRatesSetUsingGETWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * Get the details of a shipping rates set
     * Use this resource to get details of the given shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-retrieve-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param id Shipping rates set identifier. (required)
     * @return ApiResponse&lt;ShippingRatesSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Shipping rates set with given ID not found </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ShippingRatesSet> getShippingRatesSetUsingGETWithHttpInfo(@javax.annotation.Nonnull String id) throws ApiException {
        okhttp3.Call localVarCall = getShippingRatesSetUsingGETValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<ShippingRatesSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the details of a shipping rates set (asynchronously)
     * Use this resource to get details of the given shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-pobrac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-retrieve-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param id Shipping rates set identifier. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Shipping rates set with given ID not found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getShippingRatesSetUsingGETAsync(@javax.annotation.Nonnull String id, final ApiCallback<ShippingRatesSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = getShippingRatesSetUsingGETValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<ShippingRatesSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modifyShippingRatesSetUsingPUT
     * @param id Shipping rates set identifier. (required)
     * @param shippingRatesSet Shipping rates set (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Set with given id does not exist </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyShippingRatesSetUsingPUTCall(@javax.annotation.Nonnull String id, @javax.annotation.Nonnull ShippingRatesSet shippingRatesSet, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = shippingRatesSet;

        // create path and map variables
        String localVarPath = "/sale/shipping-rates/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer-token-for-user" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modifyShippingRatesSetUsingPUTValidateBeforeCall(@javax.annotation.Nonnull String id, @javax.annotation.Nonnull ShippingRatesSet shippingRatesSet, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling modifyShippingRatesSetUsingPUT(Async)");
        }

        // verify the required parameter 'shippingRatesSet' is set
        if (shippingRatesSet == null) {
            throw new ApiException("Missing the required parameter 'shippingRatesSet' when calling modifyShippingRatesSetUsingPUT(Async)");
        }

        return modifyShippingRatesSetUsingPUTCall(id, shippingRatesSet, _callback);

    }

    /**
     * Edit a user&#39;s shipping rates set
     * Use this resource to edit a new seller&#39;s shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-edytowac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-modify-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param id Shipping rates set identifier. (required)
     * @param shippingRatesSet Shipping rates set (required)
     * @return ShippingRatesSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Set with given id does not exist </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity. </td><td>  -  </td></tr>
     </table>
     */
    public ShippingRatesSet modifyShippingRatesSetUsingPUT(@javax.annotation.Nonnull String id, @javax.annotation.Nonnull ShippingRatesSet shippingRatesSet) throws ApiException {
        ApiResponse<ShippingRatesSet> localVarResp = modifyShippingRatesSetUsingPUTWithHttpInfo(id, shippingRatesSet);
        return localVarResp.getData();
    }

    /**
     * Edit a user&#39;s shipping rates set
     * Use this resource to edit a new seller&#39;s shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-edytowac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-modify-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param id Shipping rates set identifier. (required)
     * @param shippingRatesSet Shipping rates set (required)
     * @return ApiResponse&lt;ShippingRatesSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Set with given id does not exist </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ShippingRatesSet> modifyShippingRatesSetUsingPUTWithHttpInfo(@javax.annotation.Nonnull String id, @javax.annotation.Nonnull ShippingRatesSet shippingRatesSet) throws ApiException {
        okhttp3.Call localVarCall = modifyShippingRatesSetUsingPUTValidateBeforeCall(id, shippingRatesSet, null);
        Type localVarReturnType = new TypeToken<ShippingRatesSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Edit a user&#39;s shipping rates set (asynchronously)
     * Use this resource to edit a new seller&#39;s shipping rates set. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-edytowac-cennik-dostaw\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-modify-shipping-rates\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param id Shipping rates set identifier. (required)
     * @param shippingRatesSet Shipping rates set (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Set with given id does not exist </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyShippingRatesSetUsingPUTAsync(@javax.annotation.Nonnull String id, @javax.annotation.Nonnull ShippingRatesSet shippingRatesSet, final ApiCallback<ShippingRatesSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = modifyShippingRatesSetUsingPUTValidateBeforeCall(id, shippingRatesSet, _callback);
        Type localVarReturnType = new TypeToken<ShippingRatesSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for putSaleDeliverySettings
     * @param deliverySettingsRequest Delivery settings set (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - wrong amount, wrong currency, wrong join policy strategy, unsupported marketplace, attempt to modify marketplace allegro-business-* - modifying the settings for such a marketplace should be done by modifying the allegro-* marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putSaleDeliverySettingsCall(@javax.annotation.Nonnull DeliverySettingsRequest deliverySettingsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = deliverySettingsRequest;

        // create path and map variables
        String localVarPath = "/sale/delivery-settings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/vnd.allegro.public.v1+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer-token-for-user" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call putSaleDeliverySettingsValidateBeforeCall(@javax.annotation.Nonnull DeliverySettingsRequest deliverySettingsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'deliverySettingsRequest' is set
        if (deliverySettingsRequest == null) {
            throw new ApiException("Missing the required parameter 'deliverySettingsRequest' when calling putSaleDeliverySettings(Async)");
        }

        return putSaleDeliverySettingsCall(deliverySettingsRequest, _callback);

    }

    /**
     * Modify the user&#39;s delivery settings
     * Use this resource to modify the delivery settings declared by the seller. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-edytowac-ustawienia-dostawy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-edit-delivery-settings\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param deliverySettingsRequest Delivery settings set (required)
     * @return DeliverySettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - wrong amount, wrong currency, wrong join policy strategy, unsupported marketplace, attempt to modify marketplace allegro-business-* - modifying the settings for such a marketplace should be done by modifying the allegro-* marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public DeliverySettingsResponse putSaleDeliverySettings(@javax.annotation.Nonnull DeliverySettingsRequest deliverySettingsRequest) throws ApiException {
        ApiResponse<DeliverySettingsResponse> localVarResp = putSaleDeliverySettingsWithHttpInfo(deliverySettingsRequest);
        return localVarResp.getData();
    }

    /**
     * Modify the user&#39;s delivery settings
     * Use this resource to modify the delivery settings declared by the seller. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-edytowac-ustawienia-dostawy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-edit-delivery-settings\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param deliverySettingsRequest Delivery settings set (required)
     * @return ApiResponse&lt;DeliverySettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - wrong amount, wrong currency, wrong join policy strategy, unsupported marketplace, attempt to modify marketplace allegro-business-* - modifying the settings for such a marketplace should be done by modifying the allegro-* marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DeliverySettingsResponse> putSaleDeliverySettingsWithHttpInfo(@javax.annotation.Nonnull DeliverySettingsRequest deliverySettingsRequest) throws ApiException {
        okhttp3.Call localVarCall = putSaleDeliverySettingsValidateBeforeCall(deliverySettingsRequest, null);
        Type localVarReturnType = new TypeToken<DeliverySettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Modify the user&#39;s delivery settings (asynchronously)
     * Use this resource to modify the delivery settings declared by the seller. Read more: &lt;a href&#x3D;\&quot;../../tutorials/jak-zarzadzac-kontem-danymi-uzytkownika-ZM9YAKgPgi2#jak-edytowac-ustawienia-dostawy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PL&lt;/a&gt; / &lt;a href&#x3D;\&quot;../../tutorials/account-and-user-data-management-jn9vBjqjnsw#how-to-edit-delivery-settings\&quot; target&#x3D;\&quot;_blank\&quot;&gt;EN&lt;/a&gt;.
     * @param deliverySettingsRequest Delivery settings set (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication required. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden - not allowed to access user data. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity - wrong amount, wrong currency, wrong join policy strategy, unsupported marketplace, attempt to modify marketplace allegro-business-* - modifying the settings for such a marketplace should be done by modifying the allegro-* marketplace. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putSaleDeliverySettingsAsync(@javax.annotation.Nonnull DeliverySettingsRequest deliverySettingsRequest, final ApiCallback<DeliverySettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = putSaleDeliverySettingsValidateBeforeCall(deliverySettingsRequest, _callback);
        Type localVarReturnType = new TypeToken<DeliverySettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
