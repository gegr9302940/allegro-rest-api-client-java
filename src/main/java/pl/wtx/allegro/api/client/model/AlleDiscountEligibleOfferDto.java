/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoAlleDiscount;
import pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoBasePrice;
import pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoProduct;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.allegro.api.client.invoker.JSON;

/**
 * AlleDiscountEligibleOfferDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class AlleDiscountEligibleOfferDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  @javax.annotation.Nullable
  private AlleDiscountEligibleOfferDtoProduct product;

  public static final String SERIALIZED_NAME_BASE_PRICE = "basePrice";
  @SerializedName(SERIALIZED_NAME_BASE_PRICE)
  @javax.annotation.Nullable
  private AlleDiscountEligibleOfferDtoBasePrice basePrice;

  public static final String SERIALIZED_NAME_ALLE_DISCOUNT = "alleDiscount";
  @SerializedName(SERIALIZED_NAME_ALLE_DISCOUNT)
  @javax.annotation.Nullable
  private AlleDiscountEligibleOfferDtoAlleDiscount alleDiscount;

  public AlleDiscountEligibleOfferDto() {
  }

  public AlleDiscountEligibleOfferDto id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * The id of the offer.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public AlleDiscountEligibleOfferDto product(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoProduct product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public AlleDiscountEligibleOfferDtoProduct getProduct() {
    return product;
  }

  public void setProduct(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoProduct product) {
    this.product = product;
  }


  public AlleDiscountEligibleOfferDto basePrice(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoBasePrice basePrice) {
    this.basePrice = basePrice;
    return this;
  }

  /**
   * Get basePrice
   * @return basePrice
   */
  @javax.annotation.Nullable
  public AlleDiscountEligibleOfferDtoBasePrice getBasePrice() {
    return basePrice;
  }

  public void setBasePrice(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoBasePrice basePrice) {
    this.basePrice = basePrice;
  }


  public AlleDiscountEligibleOfferDto alleDiscount(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoAlleDiscount alleDiscount) {
    this.alleDiscount = alleDiscount;
    return this;
  }

  /**
   * Get alleDiscount
   * @return alleDiscount
   */
  @javax.annotation.Nullable
  public AlleDiscountEligibleOfferDtoAlleDiscount getAlleDiscount() {
    return alleDiscount;
  }

  public void setAlleDiscount(@javax.annotation.Nullable AlleDiscountEligibleOfferDtoAlleDiscount alleDiscount) {
    this.alleDiscount = alleDiscount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlleDiscountEligibleOfferDto alleDiscountEligibleOfferDto = (AlleDiscountEligibleOfferDto) o;
    return Objects.equals(this.id, alleDiscountEligibleOfferDto.id) &&
        Objects.equals(this.product, alleDiscountEligibleOfferDto.product) &&
        Objects.equals(this.basePrice, alleDiscountEligibleOfferDto.basePrice) &&
        Objects.equals(this.alleDiscount, alleDiscountEligibleOfferDto.alleDiscount);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, product, basePrice, alleDiscount);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlleDiscountEligibleOfferDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    basePrice: ").append(toIndentedString(basePrice)).append("\n");
    sb.append("    alleDiscount: ").append(toIndentedString(alleDiscount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("product");
    openapiFields.add("basePrice");
    openapiFields.add("alleDiscount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlleDiscountEligibleOfferDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlleDiscountEligibleOfferDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlleDiscountEligibleOfferDto is not found in the empty JSON string", AlleDiscountEligibleOfferDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlleDiscountEligibleOfferDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlleDiscountEligibleOfferDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        AlleDiscountEligibleOfferDtoProduct.validateJsonElement(jsonObj.get("product"));
      }
      // validate the optional field `basePrice`
      if (jsonObj.get("basePrice") != null && !jsonObj.get("basePrice").isJsonNull()) {
        AlleDiscountEligibleOfferDtoBasePrice.validateJsonElement(jsonObj.get("basePrice"));
      }
      // validate the optional field `alleDiscount`
      if (jsonObj.get("alleDiscount") != null && !jsonObj.get("alleDiscount").isJsonNull()) {
        AlleDiscountEligibleOfferDtoAlleDiscount.validateJsonElement(jsonObj.get("alleDiscount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlleDiscountEligibleOfferDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlleDiscountEligibleOfferDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlleDiscountEligibleOfferDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlleDiscountEligibleOfferDto.class));

       return (TypeAdapter<T>) new TypeAdapter<AlleDiscountEligibleOfferDto>() {
           @Override
           public void write(JsonWriter out, AlleDiscountEligibleOfferDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlleDiscountEligibleOfferDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlleDiscountEligibleOfferDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlleDiscountEligibleOfferDto
   * @throws IOException if the JSON string is invalid with respect to AlleDiscountEligibleOfferDto
   */
  public static AlleDiscountEligibleOfferDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlleDiscountEligibleOfferDto.class);
  }

  /**
   * Convert an instance of AlleDiscountEligibleOfferDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

