/*
 * Allegro REST API
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.allegro.api.client.invoker;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.nio.charset.StandardCharsets;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(pl.wtx.allegro.api.client.model.AlreadyInWarehouseShipping.class, new TypeSelector<pl.wtx.allegro.api.client.model.AlreadyInWarehouseShipping>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.AlreadyInWarehouseShipping> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AlreadyInWarehouseShipping", pl.wtx.allegro.api.client.model.AlreadyInWarehouseShipping.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.BaseOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.BaseOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.BaseOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BLOCKADE", pl.wtx.allegro.api.client.model.BlockadeOperation.class);
                        classByDiscriminatorValue.put("BLOCKADE_RELEASE", pl.wtx.allegro.api.client.model.BlockadeReleaseOperation.class);
                        classByDiscriminatorValue.put("COMPENSATION", pl.wtx.allegro.api.client.model.CompensationOperation.class);
                        classByDiscriminatorValue.put("CONTRIBUTION", pl.wtx.allegro.api.client.model.ContributionOperation.class);
                        classByDiscriminatorValue.put("CORRECTION", pl.wtx.allegro.api.client.model.CorrectionOperation.class);
                        classByDiscriminatorValue.put("DEDUCTION_CHARGE", pl.wtx.allegro.api.client.model.DeductionChargeOperation.class);
                        classByDiscriminatorValue.put("DEDUCTION_INCREASE", pl.wtx.allegro.api.client.model.DeductionIncreaseOperation.class);
                        classByDiscriminatorValue.put("PAYOUT", pl.wtx.allegro.api.client.model.PayoutOperation.class);
                        classByDiscriminatorValue.put("PAYOUT_CANCEL", pl.wtx.allegro.api.client.model.PayoutOperationCancel.class);
                        classByDiscriminatorValue.put("PROVIDER_REFUND_TRANSFER_CHARGE", pl.wtx.allegro.api.client.model.ProviderRefundTransferChargeOperation.class);
                        classByDiscriminatorValue.put("PROVIDER_REFUND_TRANSFER_INCREASE", pl.wtx.allegro.api.client.model.ProviderRefundTransferIncreaseOperation.class);
                        classByDiscriminatorValue.put("REFUND_CANCEL", pl.wtx.allegro.api.client.model.RefundCancelOperation.class);
                        classByDiscriminatorValue.put("REFUND_CHARGE", pl.wtx.allegro.api.client.model.RefundChargeOperation.class);
                        classByDiscriminatorValue.put("REFUND_INCREASE", pl.wtx.allegro.api.client.model.RefundIncreaseOperation.class);
                        classByDiscriminatorValue.put("SURCHARGE", pl.wtx.allegro.api.client.model.SurchargeOperation.class);
                        classByDiscriminatorValue.put("BaseOperation", pl.wtx.allegro.api.client.model.BaseOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.BenefitSpecification.class, new TypeSelector<pl.wtx.allegro.api.client.model.BenefitSpecification>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.BenefitSpecification> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("LARGE_ORDER_DISCOUNT", pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecification.class);
                        classByDiscriminatorValue.put("UNIT_PERCENTAGE_DISCOUNT", pl.wtx.allegro.api.client.model.MultiPackBenefitSpecification.class);
                        classByDiscriminatorValue.put("WHOLESALE_PRICE_LIST", pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecification.class);
                        classByDiscriminatorValue.put("BenefitSpecification", pl.wtx.allegro.api.client.model.BenefitSpecification.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.BlockadeOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.BlockadeOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.BlockadeOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BlockadeOperation", pl.wtx.allegro.api.client.model.BlockadeOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.BlockadeReleaseOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.BlockadeReleaseOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.BlockadeReleaseOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BlockadeReleaseOperation", pl.wtx.allegro.api.client.model.BlockadeReleaseOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryBaseEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryBaseEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryBaseEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CATEGORY_CREATED", pl.wtx.allegro.api.client.model.CategoryCreatedEvent.class);
                        classByDiscriminatorValue.put("CATEGORY_DELETED", pl.wtx.allegro.api.client.model.CategoryDeletedEvent.class);
                        classByDiscriminatorValue.put("CATEGORY_MOVED", pl.wtx.allegro.api.client.model.CategoryMovedEvent.class);
                        classByDiscriminatorValue.put("CATEGORY_RENAMED", pl.wtx.allegro.api.client.model.CategoryRenamedEvent.class);
                        classByDiscriminatorValue.put("CategoryBaseEvent", pl.wtx.allegro.api.client.model.CategoryBaseEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryCreatedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryCreatedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryCreatedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CategoryCreatedEvent", pl.wtx.allegro.api.client.model.CategoryCreatedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryDeletedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryDeletedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryDeletedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CategoryDeletedEvent", pl.wtx.allegro.api.client.model.CategoryDeletedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryMovedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryMovedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryMovedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CategoryMovedEvent", pl.wtx.allegro.api.client.model.CategoryMovedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("dictionary", pl.wtx.allegro.api.client.model.DictionaryCategoryParameter.class);
                        classByDiscriminatorValue.put("float", pl.wtx.allegro.api.client.model.FloatCategoryParameter.class);
                        classByDiscriminatorValue.put("integer", pl.wtx.allegro.api.client.model.IntegerCategoryParameter.class);
                        classByDiscriminatorValue.put("string", pl.wtx.allegro.api.client.model.StringCategoryParameter.class);
                        classByDiscriminatorValue.put("CategoryParameter", pl.wtx.allegro.api.client.model.CategoryParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryParametersScheduledBaseChange.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryParametersScheduledBaseChange>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryParametersScheduledBaseChange> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("REQUIREMENT_CHANGE", pl.wtx.allegro.api.client.model.RequirementChange.class);
                        classByDiscriminatorValue.put("CategoryParametersScheduledBaseChange", pl.wtx.allegro.api.client.model.CategoryParametersScheduledBaseChange.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryProductParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryProductParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryProductParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("dictionary", pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameter.class);
                        classByDiscriminatorValue.put("float", pl.wtx.allegro.api.client.model.FloatCategoryProductParameter.class);
                        classByDiscriminatorValue.put("integer", pl.wtx.allegro.api.client.model.IntegerCategoryProductParameter.class);
                        classByDiscriminatorValue.put("string", pl.wtx.allegro.api.client.model.StringCategoryProductParameter.class);
                        classByDiscriminatorValue.put("CategoryProductParameter", pl.wtx.allegro.api.client.model.CategoryProductParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CategoryRenamedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.CategoryRenamedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CategoryRenamedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CategoryRenamedEvent", pl.wtx.allegro.api.client.model.CategoryRenamedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityList.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityList>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MANUAL", pl.wtx.allegro.api.client.model.CompatibilityListManual.class);
                        classByDiscriminatorValue.put("PRODUCT_BASED", pl.wtx.allegro.api.client.model.CompatibilityListProductBased.class);
                        classByDiscriminatorValue.put("CompatibilityListProductBasedProductOfferResponse", pl.wtx.allegro.api.client.model.CompatibilityListProductBasedProductOfferResponse.class);
                        classByDiscriminatorValue.put("CompatibilityList", pl.wtx.allegro.api.client.model.CompatibilityList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityListIdItem.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityListIdItem>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityListIdItem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CompatibilityListIdItem", pl.wtx.allegro.api.client.model.CompatibilityListIdItem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityListItem.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityListItem>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityListItem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ID", pl.wtx.allegro.api.client.model.CompatibilityListIdItem.class);
                        classByDiscriminatorValue.put("TEXT", pl.wtx.allegro.api.client.model.CompatibilityListTextItem.class);
                        classByDiscriminatorValue.put("CompatibilityListItem", pl.wtx.allegro.api.client.model.CompatibilityListItem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityListManual.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityListManual>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityListManual> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CompatibilityListManual", pl.wtx.allegro.api.client.model.CompatibilityListManual.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityListProductBased.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityListProductBased>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityListProductBased> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CompatibilityListProductBased", pl.wtx.allegro.api.client.model.CompatibilityListProductBased.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityListProductBasedProductOfferResponse.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityListProductBasedProductOfferResponse>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityListProductBasedProductOfferResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CompatibilityListProductBasedProductOfferResponse", pl.wtx.allegro.api.client.model.CompatibilityListProductBasedProductOfferResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityListProductOfferResponse.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityListProductOfferResponse>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityListProductOfferResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CompatibilityListProductOfferResponse", pl.wtx.allegro.api.client.model.CompatibilityListProductOfferResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompatibilityListTextItem.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompatibilityListTextItem>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompatibilityListTextItem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CompatibilityListTextItem", pl.wtx.allegro.api.client.model.CompatibilityListTextItem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CompensationOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.CompensationOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CompensationOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CompensationOperation", pl.wtx.allegro.api.client.model.CompensationOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ContributionOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ContributionOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ContributionOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ContributionOperation", pl.wtx.allegro.api.client.model.ContributionOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CorrectionOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.CorrectionOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CorrectionOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CorrectionOperation", pl.wtx.allegro.api.client.model.CorrectionOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.CourierBySellerShipping.class, new TypeSelector<pl.wtx.allegro.api.client.model.CourierBySellerShipping>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.CourierBySellerShipping> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CourierBySellerShipping", pl.wtx.allegro.api.client.model.CourierBySellerShipping.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.DeductionChargeOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.DeductionChargeOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.DeductionChargeOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeductionChargeOperation", pl.wtx.allegro.api.client.model.DeductionChargeOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.DeductionIncreaseOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.DeductionIncreaseOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.DeductionIncreaseOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeductionIncreaseOperation", pl.wtx.allegro.api.client.model.DeductionIncreaseOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.DescriptionSectionItem.class, new TypeSelector<pl.wtx.allegro.api.client.model.DescriptionSectionItem>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.DescriptionSectionItem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IMAGE", pl.wtx.allegro.api.client.model.DescriptionSectionItemImage.class);
                        classByDiscriminatorValue.put("TEXT", pl.wtx.allegro.api.client.model.DescriptionSectionItemText.class);
                        classByDiscriminatorValue.put("DescriptionSectionItem", pl.wtx.allegro.api.client.model.DescriptionSectionItem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.DescriptionSectionItemImage.class, new TypeSelector<pl.wtx.allegro.api.client.model.DescriptionSectionItemImage>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.DescriptionSectionItemImage> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DescriptionSectionItemImage", pl.wtx.allegro.api.client.model.DescriptionSectionItemImage.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.DescriptionSectionItemText.class, new TypeSelector<pl.wtx.allegro.api.client.model.DescriptionSectionItemText>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.DescriptionSectionItemText> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DescriptionSectionItemText", pl.wtx.allegro.api.client.model.DescriptionSectionItemText.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.DictionaryCategoryParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.DictionaryCategoryParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.DictionaryCategoryParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DictionaryCategoryParameter", pl.wtx.allegro.api.client.model.DictionaryCategoryParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DictionaryCategoryProductParameter", pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.FloatCategoryParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.FloatCategoryParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.FloatCategoryParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FloatCategoryParameter", pl.wtx.allegro.api.client.model.FloatCategoryParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.FloatCategoryProductParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.FloatCategoryProductParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.FloatCategoryProductParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FloatCategoryProductParameter", pl.wtx.allegro.api.client.model.FloatCategoryProductParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.IntegerCategoryParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.IntegerCategoryParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.IntegerCategoryParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IntegerCategoryParameter", pl.wtx.allegro.api.client.model.IntegerCategoryParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.IntegerCategoryProductParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.IntegerCategoryProductParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.IntegerCategoryProductParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IntegerCategoryProductParameter", pl.wtx.allegro.api.client.model.IntegerCategoryProductParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecification.class, new TypeSelector<pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecification>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecification> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("LargeOrderDiscountBenefitSpecification", pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecification.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ModificationAttachmentSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ModificationAttachmentSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ModificationAttachmentSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ModificationAttachmentSafetyInformation", pl.wtx.allegro.api.client.model.ModificationAttachmentSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ModificationNoSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ModificationNoSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ModificationNoSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ModificationNoSafetyInformation", pl.wtx.allegro.api.client.model.ModificationNoSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ModificationSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ModificationSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ModificationSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ATTACHMENTS", pl.wtx.allegro.api.client.model.ModificationAttachmentSafetyInformation.class);
                        classByDiscriminatorValue.put("NO_SAFETY_INFORMATION", pl.wtx.allegro.api.client.model.ModificationNoSafetyInformation.class);
                        classByDiscriminatorValue.put("TEXT", pl.wtx.allegro.api.client.model.ModificationTextSafetyInformation.class);
                        classByDiscriminatorValue.put("ModificationSafetyInformation", pl.wtx.allegro.api.client.model.ModificationSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ModificationTextSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ModificationTextSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ModificationTextSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ModificationTextSafetyInformation", pl.wtx.allegro.api.client.model.ModificationTextSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.MultiPackBenefitSpecification.class, new TypeSelector<pl.wtx.allegro.api.client.model.MultiPackBenefitSpecification>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.MultiPackBenefitSpecification> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MultiPackBenefitSpecification", pl.wtx.allegro.api.client.model.MultiPackBenefitSpecification.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferActivatedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferActivatedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferActivatedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferActivatedEvent", pl.wtx.allegro.api.client.model.OfferActivatedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferArchivedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferArchivedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferArchivedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferArchivedEvent", pl.wtx.allegro.api.client.model.OfferArchivedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferBidCanceledEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferBidCanceledEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferBidCanceledEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferBidCanceledEvent", pl.wtx.allegro.api.client.model.OfferBidCanceledEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferBidPlacedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferBidPlacedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferBidPlacedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferBidPlacedEvent", pl.wtx.allegro.api.client.model.OfferBidPlacedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferChangedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferChangedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferChangedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferChangedEvent", pl.wtx.allegro.api.client.model.OfferChangedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferEndedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferEndedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferEndedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferEndedEvent", pl.wtx.allegro.api.client.model.OfferEndedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferPriceChangedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferPriceChangedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferPriceChangedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferPriceChangedEvent", pl.wtx.allegro.api.client.model.OfferPriceChangedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferStockChangedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferStockChangedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferStockChangedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferStockChangedEvent", pl.wtx.allegro.api.client.model.OfferStockChangedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferTranslationUpdatedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferTranslationUpdatedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferTranslationUpdatedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferTranslationUpdatedEvent", pl.wtx.allegro.api.client.model.OfferTranslationUpdatedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OfferVisibilityChangedEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.OfferVisibilityChangedEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OfferVisibilityChangedEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OfferVisibilityChangedEvent", pl.wtx.allegro.api.client.model.OfferVisibilityChangedEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.OwnTransportShipping.class, new TypeSelector<pl.wtx.allegro.api.client.model.OwnTransportShipping>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.OwnTransportShipping> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OwnTransportShipping", pl.wtx.allegro.api.client.model.OwnTransportShipping.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PayoutOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.PayoutOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PayoutOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PayoutOperation", pl.wtx.allegro.api.client.model.PayoutOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PayoutOperationCancel.class, new TypeSelector<pl.wtx.allegro.api.client.model.PayoutOperationCancel>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PayoutOperationCancel> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PayoutOperationCancel", pl.wtx.allegro.api.client.model.PayoutOperationCancel.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PriceModification.class, new TypeSelector<pl.wtx.allegro.api.client.model.PriceModification>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PriceModification> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DECREASE_PERCENTAGE", pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeDecrease.class);
                        classByDiscriminatorValue.put("DECREASE_PRICE", pl.wtx.allegro.api.client.model.PriceModificationValueChangeDecrease.class);
                        classByDiscriminatorValue.put("FIXED_PRICE", pl.wtx.allegro.api.client.model.PriceModificationFixedPrice.class);
                        classByDiscriminatorValue.put("INCREASE_PERCENTAGE", pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeIncrease.class);
                        classByDiscriminatorValue.put("INCREASE_PRICE", pl.wtx.allegro.api.client.model.PriceModificationValueChangeIncrease.class);
                        classByDiscriminatorValue.put("PriceModification", pl.wtx.allegro.api.client.model.PriceModification.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PriceModificationFixedPrice.class, new TypeSelector<pl.wtx.allegro.api.client.model.PriceModificationFixedPrice>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PriceModificationFixedPrice> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PriceModificationFixedPrice", pl.wtx.allegro.api.client.model.PriceModificationFixedPrice.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeDecrease.class, new TypeSelector<pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeDecrease>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeDecrease> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PriceModificationPercentageChangeDecrease", pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeDecrease.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeIncrease.class, new TypeSelector<pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeIncrease>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeIncrease> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PriceModificationPercentageChangeIncrease", pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeIncrease.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PriceModificationValueChangeDecrease.class, new TypeSelector<pl.wtx.allegro.api.client.model.PriceModificationValueChangeDecrease>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PriceModificationValueChangeDecrease> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PriceModificationValueChangeDecrease", pl.wtx.allegro.api.client.model.PriceModificationValueChangeDecrease.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.PriceModificationValueChangeIncrease.class, new TypeSelector<pl.wtx.allegro.api.client.model.PriceModificationValueChangeIncrease>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.PriceModificationValueChangeIncrease> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PriceModificationValueChangeIncrease", pl.wtx.allegro.api.client.model.PriceModificationValueChangeIncrease.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProductSetElementAttachmentSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProductSetElementAttachmentSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProductSetElementAttachmentSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProductSetElementAttachmentSafetyInformation", pl.wtx.allegro.api.client.model.ProductSetElementAttachmentSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProductSetElementNoSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProductSetElementNoSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProductSetElementNoSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProductSetElementNoSafetyInformation", pl.wtx.allegro.api.client.model.ProductSetElementNoSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerIdRequest.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerIdRequest>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerIdRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProductSetElementResponsibleProducerIdRequest", pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerIdRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerNameRequest.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerNameRequest>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerNameRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProductSetElementResponsibleProducerNameRequest", pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerNameRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerRequest.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerRequest>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ID", pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerIdRequest.class);
                        classByDiscriminatorValue.put("NAME", pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerNameRequest.class);
                        classByDiscriminatorValue.put("ProductSetElementResponsibleProducerRequest", pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProductSetElementSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProductSetElementSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProductSetElementSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ATTACHMENTS", pl.wtx.allegro.api.client.model.ProductSetElementAttachmentSafetyInformation.class);
                        classByDiscriminatorValue.put("NO_SAFETY_INFORMATION", pl.wtx.allegro.api.client.model.ProductSetElementNoSafetyInformation.class);
                        classByDiscriminatorValue.put("TEXT", pl.wtx.allegro.api.client.model.ProductSetElementTextSafetyInformation.class);
                        classByDiscriminatorValue.put("ProductSetElementSafetyInformation", pl.wtx.allegro.api.client.model.ProductSetElementSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProductSetElementTextSafetyInformation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProductSetElementTextSafetyInformation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProductSetElementTextSafetyInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProductSetElementTextSafetyInformation", pl.wtx.allegro.api.client.model.ProductSetElementTextSafetyInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProviderRefundTransferChargeOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProviderRefundTransferChargeOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProviderRefundTransferChargeOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProviderRefundTransferChargeOperation", pl.wtx.allegro.api.client.model.ProviderRefundTransferChargeOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ProviderRefundTransferIncreaseOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.ProviderRefundTransferIncreaseOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ProviderRefundTransferIncreaseOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProviderRefundTransferIncreaseOperation", pl.wtx.allegro.api.client.model.ProviderRefundTransferIncreaseOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.RefundCancelOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.RefundCancelOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.RefundCancelOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RefundCancelOperation", pl.wtx.allegro.api.client.model.RefundCancelOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.RefundChargeOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.RefundChargeOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.RefundChargeOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RefundChargeOperation", pl.wtx.allegro.api.client.model.RefundChargeOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.RefundIncreaseOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.RefundIncreaseOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.RefundIncreaseOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RefundIncreaseOperation", pl.wtx.allegro.api.client.model.RefundIncreaseOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.RequirementChange.class, new TypeSelector<pl.wtx.allegro.api.client.model.RequirementChange>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.RequirementChange> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RequirementChange", pl.wtx.allegro.api.client.model.RequirementChange.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.SellerOfferBaseEvent.class, new TypeSelector<pl.wtx.allegro.api.client.model.SellerOfferBaseEvent>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.SellerOfferBaseEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OFFER_ACTIVATED", pl.wtx.allegro.api.client.model.OfferActivatedEvent.class);
                        classByDiscriminatorValue.put("OFFER_ARCHIVED", pl.wtx.allegro.api.client.model.OfferArchivedEvent.class);
                        classByDiscriminatorValue.put("OFFER_BID_CANCELED", pl.wtx.allegro.api.client.model.OfferBidCanceledEvent.class);
                        classByDiscriminatorValue.put("OFFER_BID_PLACED", pl.wtx.allegro.api.client.model.OfferBidPlacedEvent.class);
                        classByDiscriminatorValue.put("OFFER_CHANGED", pl.wtx.allegro.api.client.model.OfferChangedEvent.class);
                        classByDiscriminatorValue.put("OFFER_ENDED", pl.wtx.allegro.api.client.model.OfferEndedEvent.class);
                        classByDiscriminatorValue.put("OFFER_PRICE_CHANGED", pl.wtx.allegro.api.client.model.OfferPriceChangedEvent.class);
                        classByDiscriminatorValue.put("OFFER_STOCK_CHANGED", pl.wtx.allegro.api.client.model.OfferStockChangedEvent.class);
                        classByDiscriminatorValue.put("OFFER_TRANSLATION_UPDATED", pl.wtx.allegro.api.client.model.OfferTranslationUpdatedEvent.class);
                        classByDiscriminatorValue.put("OFFER_VISIBILITY_CHANGED", pl.wtx.allegro.api.client.model.OfferVisibilityChangedEvent.class);
                        classByDiscriminatorValue.put("SellerOfferBaseEvent", pl.wtx.allegro.api.client.model.SellerOfferBaseEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.Shipping.class, new TypeSelector<pl.wtx.allegro.api.client.model.Shipping>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.Shipping> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("COURIER_BY_SELLER", pl.wtx.allegro.api.client.model.CourierBySellerShipping.class);
                        classByDiscriminatorValue.put("OWN_TRANSPORT", pl.wtx.allegro.api.client.model.OwnTransportShipping.class);
                        classByDiscriminatorValue.put("THIRD_PARTY_DELIVERY", pl.wtx.allegro.api.client.model.ThirdPartyDeliveryShipping.class);
                        classByDiscriminatorValue.put("Shipping", pl.wtx.allegro.api.client.model.Shipping.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ShippingExtended.class, new TypeSelector<pl.wtx.allegro.api.client.model.ShippingExtended>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ShippingExtended> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ALREADY_IN_WAREHOUSE", pl.wtx.allegro.api.client.model.AlreadyInWarehouseShipping.class);
                        classByDiscriminatorValue.put("COURIER_BY_SELLER", pl.wtx.allegro.api.client.model.CourierBySellerShipping.class);
                        classByDiscriminatorValue.put("OWN_TRANSPORT", pl.wtx.allegro.api.client.model.OwnTransportShipping.class);
                        classByDiscriminatorValue.put("THIRD_PARTY_DELIVERY", pl.wtx.allegro.api.client.model.ThirdPartyDeliveryShipping.class);
                        classByDiscriminatorValue.put("ShippingExtended", pl.wtx.allegro.api.client.model.ShippingExtended.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.StringCategoryParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.StringCategoryParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.StringCategoryParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StringCategoryParameter", pl.wtx.allegro.api.client.model.StringCategoryParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.StringCategoryProductParameter.class, new TypeSelector<pl.wtx.allegro.api.client.model.StringCategoryProductParameter>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.StringCategoryProductParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StringCategoryProductParameter", pl.wtx.allegro.api.client.model.StringCategoryProductParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.SubmitCommandOutput.class, new TypeSelector<pl.wtx.allegro.api.client.model.SubmitCommandOutput>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.SubmitCommandOutput> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FAILED", pl.wtx.allegro.api.client.model.SubmitFailedCommandOutput.class);
                        classByDiscriminatorValue.put("RUNNING", pl.wtx.allegro.api.client.model.SubmitRunningCommandOutput.class);
                        classByDiscriminatorValue.put("SUCCESSFUL", pl.wtx.allegro.api.client.model.SubmitSuccessfulCommandOutput.class);
                        classByDiscriminatorValue.put("SubmitCommandOutput", pl.wtx.allegro.api.client.model.SubmitCommandOutput.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "status"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.SubmitFailedCommandOutput.class, new TypeSelector<pl.wtx.allegro.api.client.model.SubmitFailedCommandOutput>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.SubmitFailedCommandOutput> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SubmitFailedCommandOutput", pl.wtx.allegro.api.client.model.SubmitFailedCommandOutput.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "status"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.SubmitRunningCommandOutput.class, new TypeSelector<pl.wtx.allegro.api.client.model.SubmitRunningCommandOutput>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.SubmitRunningCommandOutput> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SubmitRunningCommandOutput", pl.wtx.allegro.api.client.model.SubmitRunningCommandOutput.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "status"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.SubmitSuccessfulCommandOutput.class, new TypeSelector<pl.wtx.allegro.api.client.model.SubmitSuccessfulCommandOutput>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.SubmitSuccessfulCommandOutput> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SubmitSuccessfulCommandOutput", pl.wtx.allegro.api.client.model.SubmitSuccessfulCommandOutput.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "status"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.SurchargeOperation.class, new TypeSelector<pl.wtx.allegro.api.client.model.SurchargeOperation>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.SurchargeOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SurchargeOperation", pl.wtx.allegro.api.client.model.SurchargeOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.ThirdPartyDeliveryShipping.class, new TypeSelector<pl.wtx.allegro.api.client.model.ThirdPartyDeliveryShipping>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.ThirdPartyDeliveryShipping> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ThirdPartyDeliveryShipping", pl.wtx.allegro.api.client.model.ThirdPartyDeliveryShipping.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecification.class, new TypeSelector<pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecification>() {
                    @Override
                    public Class<? extends pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecification> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WholesalePriceListBenefitSpecification", pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecification.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalEmail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalEmailRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalEmailsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacePromoOptionsCommandModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacePromoOptionsModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacePublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplaceSellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacesRefusalReasonResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacesRequestValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacesRequestValueSellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacesResponseValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacesResponseValuePublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalMarketplacesVisibility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalPropertyDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceGroupTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceGroupTranslationPatchResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceGroupTranslationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServiceTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServicesGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServicesGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServicesGroupResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServicesGroupTranslationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServicesGroupTranslationWrapper.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServicesGroupTranslationWrapperWithType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdditionalServicesGroups.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Address.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AddressDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdvanceShipNotice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdvanceShipNoticeList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AdvanceShipNoticeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AfterSalesServices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AfterSalesServicesAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AfterSalesServicesAttachment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AfterSalesServicesProductOfferRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AfterSalesServicesProductOfferRequestImpliedWarranty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AfterSalesServicesProductOfferRequestReturnPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AfterSalesServicesProductOfferRequestWarranty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AiCoCreatedContent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoAlleDiscount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoAlleDiscountCampaignConditionsViolationsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoAlleDiscountMinimumGuaranteedDiscount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoBasePrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountEligibleOfferDtoProduct.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountGetSubmitCommandResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountGetSubmitCommandResponseOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountGetSubmitCommandResponseOutputNewOfferParticipation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountGetWithdrawCommandResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountGetWithdrawCommandResponseInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountGetWithdrawCommandResponseOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountGetWithdrawCommandResponseOutputWithdrawnOfferParticipation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListCampaignsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListCampaignsResponseAlleDiscountCampaignsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListCampaignsResponseAlleDiscountCampaignsInnerApplication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListCampaignsResponseAlleDiscountCampaignsInnerMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListCampaignsResponseAlleDiscountCampaignsInnerPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListCampaignsResponseAlleDiscountCampaignsInnerVisibility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListEligibleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountListSubmittedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountRequiredMerchantPriceDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandRequestInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandRequestInputCampaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandRequestInputOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandRequestInputProposedPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandResponseInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandResponseInputCampaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandResponseInputOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandResponseInputProposedPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmitCommandResponseOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoCampaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoPrices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoPricesMaximumSellingPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoPricesMinimalPriceReduction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoPricesProposedPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoProcess.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountSubmittedOfferDtoProcessErrorsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountWithdrawCommandRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountWithdrawCommandRequestInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountWithdrawCommandResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountWithdrawCommandResponseInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlleDiscountWithdrawCommandResponseOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroMarketplaces.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroParcelTrackingHistory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroParcelTrackingHistoryTrackingDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroParcelTrackingStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPickupDropOffPoint.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPickupDropOffPointAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPickupDropOffPointOpeningInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPickupDropOffPointPaymentsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPickupDropOffPointRestrictionsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPickupDropOffPointServicesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPickupDropOffPointsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesAccountChangeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesAccountChangeRequestAdditionalMarketplacesValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesAccountConsentChangeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesEligibilityResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesEligibilityResponseAdditionalMarketplacesValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesOfferChangeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesOfferConsentChangeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AllegroPricesQualificationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AlreadyInWarehouseShipping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Answer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AnswerVBeta1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ApplicationTimePolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Attachment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AttachmentDeclaration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AttachmentFile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AttachmentFileRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AuctionDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AuthError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingOfferRuleConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingOfferRuleConfigurationPriceRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRuleConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRuleConfigurationChangeByAmount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRuleConfigurationChangeByAmountChangeByAmount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRuleConfigurationChangeByAmountChangeByAmountValuesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRuleConfigurationChangeByPercentage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRuleConfigurationChangeByPercentageChangeByPercentage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRulePostRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRulePutRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRuleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AutomaticPricingRulesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AvailableConstraint.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AvailableProductResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AvailableProductsList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AvailablePromotionPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AvailablePromotionPackages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.AverageRates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.B2b.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Badge.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationBargainPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationCampaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationPrices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationProcess.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationPurchaseConstraints.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationPurchaseConstraintsLimit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationPurchaseConstraintsLimitPerUser.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationRejectionReason.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationRejectionReasonMessage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationSubsidySellerPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplicationSubsidyTargetPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeApplications.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeCampaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeMarketPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeOperationProcess.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePatchPrices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePatchPricesPrices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePatchPricesPricesBargain.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePatchProcess.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePatchProcessProcess.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePatchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePrices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeProcess.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgePublicationTimePolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgeSubsidyPrices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BadgesList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BaseSaleProductResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BasicDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Benefit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BidRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntries.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntryAdditionalInfoInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntryBalance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntryOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntryOrder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntryTax.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntryType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingEntryValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BillingType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BlockadeOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BlockadeReleaseOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BundleDiscountDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BundleMarketplaceDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BundledOfferDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BuyNowPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BuyerParticipant.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BuyerPreferencesReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.BuyerReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CampaignRefusalReason.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CampaignRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CampaignResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CancelShipmentCommandStatusDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Caption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CarrierParcelTrackingResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CashOnDeliveryDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CashOnDeliveryLimitDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoriesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoriesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Category.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryCreatedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryDefinitionDescriptionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryDeletedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryDeletedEventAllOfRedirectCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryDtoParent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryEventBaseCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryEventBaseCategoryParent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryEventsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryMovedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryOptionsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParameterDisplayConditions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParameterList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParameterOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParameterRequirementConditions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParameterWithValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParameterWithoutValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParametersScheduledBaseChangeCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParametersScheduledBaseChangeParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryParametersScheduledChangesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryProductParameterList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryRenamedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategorySuggestionCategoryNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategorySuggestionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CategoryTaxSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Cells.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ChangePrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ChangePriceInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ChangePriceWithoutOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ChangedParameterDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ChangedTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CharityOrganization.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckFormsNewOrderInvoice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckFormsNewOrderInvoiceFile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckFormsNewOrderInvoiceId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutForm.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormAddWaybillCreated.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormAddWaybillCreatedLineItemsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormAddWaybillRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormAddWaybillRequestLineItemsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormAdditionalService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormBuyerAddressReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormBuyerReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryCancellation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryMethod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryPickupPoint.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryPickupPointAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryTime.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryTimeDispatch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDeliveryTimeGuaranteed.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormDiscount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormFulfillment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormFulfillmentShipmentSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormInvoiceAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormInvoiceAddressCompany.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormInvoiceAddressCompanyId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormInvoiceAddressNaturalPerson.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormInvoiceInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormLineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormLineItemTax.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormNoteReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormOrderWaybillResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormPaymentReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormSummaryTotalToPay.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutForms.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormsOrderInvoice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormsOrderInvoiceFile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormsOrderInvoiceFileSecurityVerification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CheckoutFormsOrderInvoices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedDailyEventStatResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedEventStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedExtension.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedExtraPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedPackageConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedPackageConfigs.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedPackages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedPromotion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ClassifiedsPackages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CommandOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CommandTask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CommentVBeta1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CommissionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Company.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListIdItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListIdItemAdditionalInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListItemProductBased.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListManual.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListManualType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListProductBased.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListProductBasedProductOfferResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListProductOfferResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListSupportedCategoriesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListSupportedCategoriesDtoSupportedCategoriesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListSupportedCategoriesDtoSupportedCategoriesInnerValidationRules.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibilityListTextItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibleProductDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibleProductDtoAttributesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibleProductDtoGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibleProductsGroupsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibleProductsGroupsDtoGroupsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompatibleProductsListDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CompensationOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ConstraintCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Contact.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ContactRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ContactResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ContactResponseList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ContributionOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Coordinates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CorrectionOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Courier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CourierBySellerShipping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateAdvanceShipNoticeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateAdvanceShipNoticeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateAfterSalesServiceConditionsAttachmentUsingPOSTRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateOfferBundleDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreatePickupCommandStatusDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateProductOffers422Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateResponsiblePersonRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateResponsiblePersonRequestPersonalData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateResponsibleProducerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CreateShipmentCommandStatusDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CurrentPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnBuyer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnItemReason.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnParcelSender.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnRefund.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnRefundBankAccount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnRefundBankAccountAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnRefundRejectionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnRefundRejectionRequestRejection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnRejection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.CustomerReturnReturnParcel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Deduction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeductionChargeOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeductionIncreaseOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryBasic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryFull.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryMethodId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryProductOfferRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryProductOfferRequestShippingRates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryProductOfferResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryServiceDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryServiceIdDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliveryServicesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsRequestAbroadFreeDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsRequestFreeDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsRequestMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsResponseAbroadFreeDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsResponseCustomCost.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsResponseFreeDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsResponseJoinPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DeliverySettingsResponseMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DescribesListingFee.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DescribesSuccessCommissionFee.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DescriptionSection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DescriptionSectionItemImage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DescriptionSectionItemText.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DictionaryCategoryParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DictionaryCategoryParameterAllOfDictionary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameterAllOfDictionary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DictionaryCategoryProductParameterAllOfRestrictions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DimensionValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Discounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DiscountsProductOfferRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DiscountsProductOfferRequestWholesalePriceList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DiscountsProductOfferResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DiscountsWholesalePriceList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Dispute.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeAttachment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeAttachmentId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeAuthor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeCheckoutForm.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeClaim.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeFirstMessage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeMessage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeMessageAuthor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeMessageList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.DisputeUser.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.EmailRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.EmailResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Error.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Error200.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Error400.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Error403.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Error404.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Error504.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ErrorsHolder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Exclusion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ExternalId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Fee.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FeePreviewResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FloatCategoryParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FloatCategoryProductParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FloatCategoryProductParameterAllOfRestrictions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FulfillmentOrder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FulfillmentOrderParcel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FulfillmentOrderParcelItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FulfillmentRemovalPreference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FulfillmentWithdrawalAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FundraisingCampaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.FundraisingCampaigns.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GeneralReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetBadgeCampaignsList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetDeliveryServices504Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInnerShippingRatesConstraints.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInnerShippingRatesConstraintsFirstItemRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInnerShippingRatesConstraintsMaxPackageWeight.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInnerShippingRatesConstraintsMaxQuantityPerPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInnerShippingRatesConstraintsNextItemRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInnerShippingRatesConstraintsShippingTime.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfDeliveryMethodsUsingGET200ResponseDeliveryMethodsInnerShippingRatesConstraintsShippingTimeDefault.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfShippingRatestUsingGET200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfShippingRatestUsingGET200ResponseShippingRatesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetListOfShippingRatestUsingGET200ResponseShippingRatesInnerMarketplacesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetOfferSmartClassificationGET400Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetOfferSmartClassificationGET403Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetRefundApplications200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetRefundedPayments200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetSaleProductsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetSaleProductsResponseNextPage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.GetShipmentDetails404Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.HandlingUnit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Header.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ImageUrl.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ImpliedWarrantiesListImpliedWarrantyBasic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ImpliedWarranty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ImpliedWarrantyBasic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ImpliedWarrantyPeriod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ImpliedWarrantyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ImpliedWarrantyResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.InitializeRefund.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.InitializeRefundAdditionalServices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.InitializeRefundDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.InitializeRefundOverpaid.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.InsuranceDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.IntegerCategoryParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.IntegerCategoryProductParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.IntegerCategoryProductParameterAllOfRestrictions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Interlocutor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.JustId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Justification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LabelRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Labels.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecificationAllOfDiscount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecificationAllOfOrderValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LargeOrderDiscountBenefitSpecificationAllOfThresholds.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LatestOrderEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LimitWithCurrencyDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LineItemDiscount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LineItemReconciliation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LineItemVoucher.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.LineItemVoucherValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingCategoryWithCount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingResponseCategories.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingResponseFilters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingResponseFiltersValues.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingResponseOffers.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingResponseSearchMeta.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ListingResponseSort.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Location.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ManualDescriptionTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ManualProductSafetyInformationDescriptionTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ManualSafetyInformationTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ManualTitleTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ManualTranslationUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketedBeforeGPSRObligation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceAvailablePromotionPackages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceItemCurrencies.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceItemCurrency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceItemLanguage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceItemLanguages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceItemShippingCountry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceOfferPromoOption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplaceReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MarketplacesVisibility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MaxPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MeResponseBaseMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Message.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageAdditionalInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageAttachmentId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageAttachmentInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageAuthor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageOrder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageRelatedObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessageToSellerSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MessagesList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MinimalPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModelConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Modification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationAttachmentSafetyInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationAttachmentSafetyInformationAllOfAttachments.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationDiscounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationDiscountsWholesalePriceList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationNoSafetyInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationPayments.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationResponsiblePerson.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationResponsibleProducer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ModificationTextSafetyInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MultiPackBenefitSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MultiPackBenefitSpecificationAllOfConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MultiPackBenefitSpecificationAllOfTrigger.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.MyBidResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.NetPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.NewAttachmentDeclaration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.NewMessage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.NewMessageInThread.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.NewProductParameterDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.NullableTurnoverDiscountDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferActivatedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAdditionalMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAdditionalServices.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferArchivedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAttachment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAttachmentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAutomaticPricingCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAutomaticPricingCommandModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAutomaticPricingModificationRemove.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAutomaticPricingModificationRemoveRemoveInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAutomaticPricingModificationSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAutomaticPricingModificationSetSetInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferAutomaticPricingModificationSetSetInnerRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferBadgeCampaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferBidCanceledEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferBidPlacedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferBundleDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferBundleDTOPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferBundlesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferBundlesDTONextPage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferCategoryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferChangeCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferChangedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferCriterium.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferDescriptionTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferEndedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferEventBaseOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferEventEndedOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferEventEndedOfferAllOfPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferEventExternalOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferEventExternalOfferForPriceChanges.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferEventExternalOfferWithPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferFixedPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferImageLinkUploadRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferImageUploadResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferImages.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoImage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1AdditionalMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1AdditionalMarketplacePublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1AdditionalMarketplaceSellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1AdditionalMarketplaceStock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1B2b.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1Delivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1Publication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1PublicationMarketplaces.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1SaleInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1SellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1Stats.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferListingDtoV1Stock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferLowestPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferMarketplacesPriceChanges.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferMarketplacesPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPriceChangeCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPriceChangedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferProductSetProductReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferProductSetReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPromoOption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPromoOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPromoOptionsForSeller.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPromoOptionsPendingChanges.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPromotion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferQuantityChangeCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferQuoteDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferQuotesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRating.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRatingScoreDistributionInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRatingSizeFeedbackInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRequirements.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRules.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRulesRulesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRulesRulesInnerMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferRulesRulesInnerRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferSafetyInformationTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferSeller.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferSellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferShippingRates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferStatModelDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferStatResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferStatsResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferStock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferStockChangedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferTaxRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferTaxSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferTitleTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferTranslation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferTranslationUpdatedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferTranslations.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferVendor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OfferVisibilityChangedEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OffersSearchResultDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OpenHour.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OperationParticipantAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OperationPayment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OperationValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Order.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderEventData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderEventStats.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderEventsList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderLineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderLineItemOfferReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderMarketplace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrderOffersInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrdersShippingCarrier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OrdersShippingCarriersResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.OwnTransportShipping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PackageDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PackageRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Parameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParameterProductOfferRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParameterProductOfferResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParameterRangeValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParametersForPreviewPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelAdditionalServicesAvailability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelAdditionalServicesCashOnDeliveryAvailability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelAdditionalServicesOptionAvailability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelCreationAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelCreationAddressWithMandatoryPlace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelTrackingHistory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelTrackingHistoryTrackingDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ParcelTrackingStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Participant.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PatchBadge202Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Payment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PaymentOperations.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Payments.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PaymentsSurcharge.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Payout.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PayoutOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PayoutOperationCancel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PhoneNumberWithCountryCode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PhonesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PhonesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PickupAddressDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PickupCreateCommandDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PickupCreateRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PickupDateProposalDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PickupDateProposalsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PickupProposalsRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PickupProposalsResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Pos.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PosLocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Price.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceAutomation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceAutomationRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceModificationFixedPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceModificationFixedPriceHolder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeDecrease.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceModificationPercentageChangeIncrease.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceModificationValueChangeDecrease.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceModificationValueChangeHolder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PriceModificationValueChangeIncrease.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PricingOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PricingPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Product.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductCategoryProposal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductCategoryWithPath.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductChangeDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductChangeDtoProduct.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductChangeProposalDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductChangeProposalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductChangesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductImageProposal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductNameProposal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferAdditionalServicesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferAdditionalServicesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferAttachmentInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferBase.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferFundraisingCampaignRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferFundraisingCampaignResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductOfferResponsePublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductParameterDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductParameterDtoOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductParameterOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductParameterProposal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductParameterValueProposal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductProposalsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductProposalsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductProposalsResponseCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductProposalsResponsePublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSafetyDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSafetyInformationDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementAttachmentSafetyInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementAttachmentSafetyInformationAllOfAttachments.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementNoSafetyInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementQuantity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementQuantityQuantity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementResponsiblePersonRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementResponsiblePersonRequestResponsiblePerson.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerIdRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerNameRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementResponsibleProducerRequestWrapper.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementSafetyInformationWrapper.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSetElementTextSafetyInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductSimilarCategoryWithPath.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductsCategoryPath.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProductsCategorySubcategories.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoGeneralReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoModificationReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoModificationTask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoOptionsCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoOptionsCommandModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoOptionsCommandModificationPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoOptionsModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromoOptionsModifications.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Promotion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromotionCampaignResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromotionCampaignsResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromotionRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PromotionResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProviderRefundTransferChargeOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ProviderRefundTransferIncreaseOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PublicOfferPreviewRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PublicTableDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PublicTablesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Publication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PublicationChangeCommandDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PublicationModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PublicationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.PublicationTimePolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.QuantityModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.QuoteResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Rates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReceiverAddressDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReceivingEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReceivingState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReceivingStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Recipient.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Reference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundAdditionalServicesValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundCancelOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundChargeOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaim.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaimBuyer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaimCommission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaimLineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaimLineItemOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaimRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaimRequestLineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundClaimResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundDeliveryValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundIncreaseOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundLineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundLineItemValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundOrder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundOverpaidValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundPayment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundSurchargeValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefundTotalValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefusalMessage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RefusalReason.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RelatedReason.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Removal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RemovalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RequirementChange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReserveInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsiblePersonAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsiblePersonContact.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsiblePersonResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsiblePersonResponsePersonalData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsiblePersonsGET200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsibleProducerAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsibleProducerContact.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsibleProducerResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsibleProducerResponseProducerData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ResponsibleProducersGET200Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.RestrictionCause.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPoliciesListReturnPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicyAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicyAvailability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicyContact.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicyOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicyResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ReturnPolicyReturnCost.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalePartialProductOfferResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalePartialProductOfferResponseAdditionalMarketplacesValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalePartialProductOfferResponseAdditionalMarketplacesValueSellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalePartialProductOfferResponseSellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalePartialProductOfferResponseStock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductCompatibilityList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductDtoPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferPatchRequestV1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferPatchRequestV1AllOfDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferPatchRequestV1AllOfProductSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferPublicationMarketplacesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferPublicationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferPublicationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestBase.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestBaseAllOfContact.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestBaseAllOfDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestBaseAllOfPublication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestBaseAllOfSizeTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestV1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestV1AllOfDelivery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferRequestV1AllOfProductSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1AllOfProductSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1AllOfProductSetAllOfProduct.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1AllOfProductSetAllOfResponsiblePerson.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1AllOfProductSetAllOfResponsibleProducer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferResponseV1AllOfWarnings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferStatusResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOfferStatusResponseOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductOffersRequestStock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SaleProductResponseCategoriesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalesQualityForDay.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalesQualityHistoryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SalesQualityMetric.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Seller.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerCreateRebateRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerOfferEventsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerOfferStatsResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerParticipant.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerRebateDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerRebateOfferCriterion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerRebateOfferCriterionOffersInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerRebatesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellerReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellingMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SellingModeWithNetPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SenderAddressDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShipmentCancelCommandDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShipmentCancelRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShipmentCreateCommandDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShipmentCreateRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShipmentDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShipmentIdsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShipmentPickupAddressDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRateDeliveryMethod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRateFirstItemRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRateMaxPackageWeight.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRateNextItemRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRateShippingTime.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ShippingRatesSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SinglePromotionCampaignResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SizeTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SizeTablePostRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SizeTablePutRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SizeTableTemplateImageResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SizeTableTemplateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SizeTableTemplatesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SmartDeliveryMethod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SmartOfferClassificationReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SmartOfferClassificationReportClassification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SmartOfferClassificationReportConditionsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SmartSellerClassificationReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SmartSellerClassificationReportClassification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SmartSellerClassificationReportConditionsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StandardizedDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StartingPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Stock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StockProduct.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StockProductItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StockProductList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StockQuantity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StockSellingStats.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StockStorageFee.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StockStorageFeeDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StringCategoryParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StringCategoryProductParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.StringCategoryProductParameterAllOfRestrictions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Subject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SubmitCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SubmitCommandInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SubmitFailedCommandOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SubmitRunningCommandOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SubmitSuccessfulCommandOutput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SupplierDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Surcharge.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.SurchargeOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TagId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TagIdsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TagListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TagRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TagResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaskCount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaskReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Tax.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaxExemption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaxIdRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaxIdResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaxRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaxRateValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TaxSubject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TecdocSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TecdocSpecificationItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ThirdParty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ThirdPartyDeliveryShipping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Thread.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ThreadId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ThreadReadFlag.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ThreadsList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TrustedContent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TurnoverDiscountDefinitionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TurnoverDiscountDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TurnoverDiscountRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TurnoverDiscountThresholdDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TurnoverDiscountThresholdDtoDiscount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.TurnoverDiscountThresholdDtoMinimumTurnover.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UnfilledParametersResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UnfilledParametersResponseOffersInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UnfilledParametersResponseOffersInnerCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UnfilledParametersResponseOffersInnerParametersInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UpdateOfferBundleDiscountDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UpdateResponsiblePersonRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UpdateResponsibleProducerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UpdateSubmittedAdvanceShipNoticeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UpdateSubmittedHandlingUnitInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UpdateSubmittedShippingInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.User.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserCampaignEligibility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRating.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingAnswerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingListResponseVBeta1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingRemovalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingRemovalRequestRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseNotRecommended.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseRecommended.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2NotRecommended.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2Recommended.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2Statistics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2StatisticsExcluded.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2StatisticsReceived.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2StatisticsRemoved.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingSummaryResponseV2User.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.UserRatingVBeta1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Validation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ValidationError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.ValidationWarning.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.VariantSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.VariantSetOffer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.VariantSetParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.VariantSetResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.VariantSets.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.VariantSetsVariantSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.VisibilityTimePolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Wallet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WalletBalance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WarrantiesListWarrantyBasic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.Warranty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WarrantyAttachment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WarrantyBasic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WarrantyPeriod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WarrantyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WarrantyResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WeightValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecificationAllOfQuantity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WholesalePriceListBenefitSpecificationAllOfThresholds.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WrapperTypeForPreviewConditions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new pl.wtx.allegro.api.client.model.WrapsListingAndCommissionsFees.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
    * Deserialize the given JSON InputStream to a Java object.
    *
    * @param <T>         Type
    * @param inputStream The JSON InputStream
    * @param returnType  The type to deserialize into
    * @return The deserialized Java object
    */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(InputStream inputStream, Type returnType) throws IOException {
        try (InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8)) {
        if (isLenientOnJson) {
            // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
            JsonReader jsonReader = new JsonReader(reader);
            jsonReader.setLenient(true);
            return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(reader, returnType);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
